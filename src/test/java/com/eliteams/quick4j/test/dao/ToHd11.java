package com.eliteams.quick4j.test.dao;

import java.io.FileOutputStream;
import java.io.OutputStreamWriter;
import java.text.SimpleDateFormat;
import java.util.Calendar;

public class ToHd11 {

    public static void main(String[] args) {
        StringBuffer sb = new StringBuffer();

        sb.append("//" + " Created" + "\t"+": ");
        String datea = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(Calendar.getInstance().getTime());
        sb.append(datea);
        sb.append("\r\n");
        sb.append("//" + " DLL id" + "\t"+": ");
        sb.append("C:\\Program Files\\DHI\\2014\\bin\\pfs2004.dll");//服务器的DHI地址；
        sb.append("\r\n");
        sb.append("//" + " PFS version"+"  : Feb  "  +"4 2015 19:27:20");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("[MIKE0_HD]");
        sb.append("\r\n");
        sb.append("   [Global_Variables]");
        sb.append("\r\n");
        sb.append("      [Global_Values]");
        sb.append("\r\n");
        sb.append("         G_waterlevel = 0.1");
        sb.append("\r\n");
        sb.append("         iLevelDepth = 0");
        sb.append("\r\n");
        sb.append("         G_discharge = 0.1");
        sb.append("\r\n");
        sb.append("         G_wind_factor = 1");
        sb.append("\r\n");
        sb.append("         G_resistance = 0.03333333333333333");
        sb.append("\r\n");
        sb.append("         G_S_max = 0");
        sb.append("\r\n");
        sb.append("         G_f = 0");
        sb.append("\r\n");
        sb.append("         G_k_100 = 1");
        sb.append("\r\n");
        sb.append("         G_min_width = 0");
        sb.append("\r\n");
        sb.append("         G_flood_plan_res = -99");
        sb.append("\r\n");
        sb.append("         G_wave = 1");
        sb.append("\r\n");
        sb.append("         ResisZone = 0, 0.03333333333333333, 0.04, 0.05");
        sb.append("\r\n");
        sb.append("      EndSect  // Global_Values");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("      [Defalt_Values]");
        sb.append("\r\n");
        sb.append("         delta = 0.5");
        sb.append("\r\n");
        sb.append("         delhs = 0.01");
        sb.append("\r\n");
        sb.append("         delh = 0.1");
        sb.append("\r\n");
        sb.append("         alpha = 1");
        sb.append("\r\n");
        sb.append("         theta = 1");
        sb.append("\r\n");
        sb.append("         eps = 0.0001");
        sb.append("\r\n");
        sb.append("         dh_node = 0.01");
        sb.append("\r\n");
        sb.append("         zeta_min = 0.1");
        sb.append("\r\n");
        sb.append("         struc_fac = 0");
        sb.append("\r\n");
        sb.append("         froude_exp = -1");
        sb.append("\r\n");
        sb.append("         froude_max = -1");
        sb.append("\r\n");
        sb.append("         no_iter = 1");
        sb.append("\r\n");
        sb.append("         max_iter = 100");
        sb.append("\r\n");
        sb.append("         inter1_max = 10");
        sb.append("\r\n");
        sb.append("         wind_shear_stress = false");
        sb.append("\r\n");
        sb.append("         resist_num = 1");
        sb.append("\r\n");
        sb.append("         spilfc = 0");
        sb.append("\r\n");
        sb.append("         storfc = 0");
        sb.append("\r\n");
        sb.append("      EndSect  // Defalt_Values");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("      [Quasi_steady]");
        sb.append("\r\n");
        sb.append("         relax = 0.5");
        sb.append("\r\n");
        sb.append("         beta_limit = 1e-008");
        sb.append("\r\n");
        sb.append("         fac_0 = 2.5");
        sb.append("\r\n");
        sb.append("         qconv_factor = 0.001");
        sb.append("\r\n");
        sb.append("         hconv_factor = 0.01");
        sb.append("\r\n");
        sb.append("         min_hconv = 1e-005");
        sb.append("\r\n");
        sb.append("         qstruc_factor = 0.005");
        sb.append("\r\n");
        sb.append("         hstop = 0.0001");
        sb.append("\r\n");
        sb.append("         EnergyEquation = false, 0");
        sb.append("\r\n");
        sb.append("         ContractExpansion = false");
        sb.append("\r\n");
        sb.append("         SlopeUpstream = false");
        sb.append("\r\n");
        sb.append("         VelocityCoefficient = false");
        sb.append("\r\n");
        sb.append("         NoConvectiveSuppression = false");
        sb.append("\r\n");
        sb.append("         G_ContractExpansion = 0.1, 0.3");
        sb.append("\r\n");
        sb.append("      EndSect  // Quasi_steady");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("      [Add_Output]");
        sb.append("\r\n");
        sb.append("         ReducedOut = 0");
        sb.append("\r\n");
        sb.append("         Velo_H = false");
        sb.append("\r\n");
        sb.append("         Velo_struc = false");
        sb.append("\r\n");
        sb.append("         Discharge_H = false");
        sb.append("\r\n");
        sb.append("         CrossSec_H = false");
        sb.append("\r\n");
        sb.append("         FlowWidth_H = false");
        sb.append("\r\n");
        sb.append("         Radius_H = false");
        sb.append("\r\n");
        sb.append("         Resistance_H = false");
        sb.append("\r\n");
        sb.append("         Conveyance_H = false");
        sb.append("\r\n");
        sb.append("         FroudeNum_H = false");
        sb.append("\r\n");
        sb.append("         Volume_H = false");
        sb.append("\r\n");
        sb.append("         Volume_Total = false");
        sb.append("\r\n");
        sb.append("         FloodArea_H = false");
        sb.append("\r\n");
        sb.append("         FloodArea_Total = false");
        sb.append("\r\n");
        sb.append("         MassError_H = false");
        sb.append("\r\n");
        sb.append("         MassError_Total = false");
        sb.append("\r\n");
        sb.append("         AcumMassError_Total = false");
        sb.append("\r\n");
        sb.append("         Topo_print = false");
        sb.append("\r\n");
        sb.append("         Coef_print = false");
        sb.append("\r\n");
        sb.append("         Test_print = false");
        sb.append("\r\n");
        sb.append("         LatInflows_H = false");
        sb.append("\r\n");
        sb.append("         EnergyLevel = false");
        sb.append("\r\n");
        sb.append("         EnergySlope = false");
        sb.append("\r\n");
        sb.append("         WaterSlope = false");
        sb.append("\r\n");
        sb.append("         BedShearStress = false");
        sb.append("\r\n");
        sb.append("         GroundwaterHead = false");
        sb.append("\r\n");
        sb.append("         TimeStep = false");
        sb.append("\r\n");
        sb.append("      EndSect  // Add_Output");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("      [MixingCoefficients]");
        sb.append("\r\n");
        sb.append("         MixingCoef = 0, 0.17, 0.04, 0.1, 0.03");
        sb.append("\r\n");
        sb.append("      EndSect  // MixingCoefficients");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("      [WaterLevelMarkTitles]");
        sb.append("\r\n");
        sb.append("         MarkTitles = 0, ''");
        sb.append("\r\n");
        sb.append("         MarkInterpolate = 0, false");
        sb.append("\r\n");
        sb.append("      EndSect  // WaterLevelMarkTitles");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("      [BedResistTools]");
        sb.append("\r\n");
        sb.append("         BRTools = 0, false, false, false, 0, 0, 0, 0, 0");
        sb.append("\r\n");
        sb.append("      EndSect  // BedResistTools");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("      [WaterLevelCurve]");
        sb.append("\r\n");
        sb.append("         WLDueToCurve = false, false, false, false, false, 0, 0, 0, 0");
        sb.append("\r\n");
        sb.append("      EndSect  // WaterLevelCurve");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("      [WaterLevelSandBars]");
        sb.append("\r\n");
        sb.append("         WLDueToSand = false, 0, 0, 0, 0, 0");
        sb.append("\r\n");
        sb.append("      EndSect  // WaterLevelSandBars");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("      [Encroachment]");
        sb.append("\r\n");
        sb.append("         Max_no_iter = 20");
        sb.append("\r\n");
        sb.append("      EndSect  // Encroachment");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("      [Heat_Balance]");
        sb.append("\r\n");
        sb.append("         Calc = false");
        sb.append("\r\n");
        sb.append("         Latitude = 55");
        sb.append("\r\n");
        sb.append("         Longitude = -12");
        sb.append("\r\n");
        sb.append("         TimeZone = -15");
        sb.append("\r\n");
        sb.append("         DisTime = 0");
        sb.append("\r\n");
        sb.append("         LightAtt = 10");
        sb.append("\r\n");
        sb.append("         betaBeer = 0");
        sb.append("\r\n");
        sb.append("         RadA = 0.2");
        sb.append("\r\n");
        sb.append("         RadB = 0.5");
        sb.append("\r\n");
        sb.append("         VapA = 1");
        sb.append("\r\n");
        sb.append("         VapB = 1");
        sb.append("\r\n");
        sb.append("      EndSect  // Heat_Balance");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("      [Stratification]");
        sb.append("\r\n");
        sb.append("         npv = 10");
        sb.append("\r\n");
        sb.append("         dens = true");
        sb.append("\r\n");
        sb.append("         visc = 0.003");
        sb.append("\r\n");
        sb.append("         vmf = 3");
        sb.append("\r\n");
        sb.append("         vmb = 0");
        sb.append("\r\n");
        sb.append("         Rich = true");
        sb.append("\r\n");
        sb.append("         bpr1 = 1");
        sb.append("\r\n");
        sb.append("         bpr2 = 0");
        sb.append("\r\n");
        sb.append("         uu = 1");
        sb.append("\r\n");
        sb.append("         uw = 1");
        sb.append("\r\n");
        sb.append("         uwc = 1");
        sb.append("\r\n");
        sb.append("         dfx = 1");
        sb.append("\r\n");
        sb.append("         dfz = 1");
        sb.append("\r\n");
        sb.append("      EndSect  // Stratification");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("      [M12Param]");
        sb.append("\r\n");
        sb.append("         fricfac = 0.002");
        sb.append("\r\n");
        sb.append("         maxvol = 100");
        sb.append("\r\n");
        sb.append("         maxvelo = 0.008999999999999999");
        sb.append("\r\n");
        sb.append("         minthick = 0.01");
        sb.append("\r\n");
        sb.append("         densdiff = 0.001");
        sb.append("\r\n");
        sb.append("         action = 0");
        sb.append("\r\n");
        sb.append("         R1 = 0.05");
        sb.append("\r\n");
        sb.append("         R2 = 0.05");
        sb.append("\r\n");
        sb.append("         Rs = 0.15");
        sb.append("\r\n");
        sb.append("      EndSect  // M12Param");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("      [M12Init]");
        sb.append("\r\n");
        sb.append("         h1 = 0");
        sb.append("\r\n");
        sb.append("         h0 = 0");
        sb.append("\r\n");
        sb.append("         Q1 = 0");
        sb.append("\r\n");
        sb.append("         Q0 = 0");
        sb.append("\r\n");
        sb.append("         G_friction_factor = 0.0024");
        sb.append("\r\n");
        sb.append("      EndSect  // M12Init");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("      [TextOutput]");
        sb.append("\r\n");
        sb.append("         GenerateOutput = false");
        sb.append("\r\n");
        sb.append("         Delimiter = ''");
        sb.append("\r\n");
        sb.append("         ColumnWidth = 20");
        sb.append("\r\n");
        sb.append("         SummaryInfo = false, false, false, false");
        sb.append("\r\n");
        sb.append("         GridPointOutputType = 1");
        sb.append("\r\n");
        sb.append("         LimitedPeriod = false");
        sb.append("\r\n");
        sb.append("         LimitedPeriodStart = 2020, 2, 12, 16, 58, 53");
        sb.append("\r\n");
        sb.append("         LimitedPeriodEnd = 2020, 2, 12, 16, 58, 53");
        sb.append("\r\n");
        sb.append("         [OutputItems]");
        sb.append("\r\n");
        sb.append("         EndSect  // OutputItems");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("         [OutputFiles]");
        sb.append("\r\n");
        sb.append("         EndSect  // OutputFiles");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("      EndSect  // TextOutput");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("      [MapOutput]");
        sb.append("\r\n");
        sb.append("         GenerateOutput = false");
        sb.append("\r\n");
        sb.append("         ApplyDemInRiverXsec = false");
        sb.append("\r\n");
        sb.append("         ApplyDemGroundElevation = false");
        sb.append("\r\n");
        sb.append("         MapAreaGeoDb = false");
        sb.append("\r\n");
        sb.append("         GeoDb = ||");
        sb.append("\r\n");
        sb.append("         AddToCalculation = false");
        sb.append("\r\n");
        sb.append("         [MapOutputFiles]");
        sb.append("\r\n");
        sb.append("         EndSect  // MapOutputFiles");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("         [DemInputFiles]");
        sb.append("\r\n");
        sb.append("         EndSect  // DemInputFiles");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("      EndSect  // MapOutput");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("      [Leakage]");
        sb.append("\r\n");
        sb.append("         IncludeLeakage = false");
        sb.append("\r\n");
        sb.append("         LeakageCoefficient = 0");
        sb.append("\r\n");
        sb.append("      EndSect  // Leakage");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("   EndSect  // Global_Variables");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("   [InitList]");
        sb.append("\r\n");
        sb.append("   EndSect  // InitList");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("   [WindList]");
        sb.append("\r\n");
        sb.append("   EndSect  // WindList");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("   [WLSandBarsList]");
        sb.append("\r\n");
        sb.append("   EndSect  // WLSandBarsList");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("   [BedList]");
        sb.append("\r\n");
        sb.append("   EndSect  // BedList");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("   [WaveList]");
        sb.append("\r\n");
        sb.append("   EndSect  // WaveList");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("   [WaterList]");
        sb.append("\r\n");
        sb.append("   EndSect  // WaterList");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("   [FloodList]");
        sb.append("\r\n");
        sb.append("   EndSect  // FloodList");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("   [MixingCoefList]");
        sb.append("\r\n");
        sb.append("   EndSect  // MixingCoefList");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("   [WaterLevelMarkList]");
        sb.append("\r\n");
        sb.append("   EndSect  // WaterLevelMarkList");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("   [BedResistanceToolboxList]");
        sb.append("\r\n");
        sb.append("   EndSect  // BedResistanceToolboxList");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("   [WLCurveList]");
        sb.append("\r\n");
        sb.append("   EndSect  // WLCurveList");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("   [WLSandBarsList]");
        sb.append("\r\n");
        sb.append("   EndSect  // WLSandBarsList");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("   [Encroachment_Setup]");
        sb.append("\r\n");
        sb.append("   EndSect  // Encroachment_Setup");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("   [M12ParamList]");
        sb.append("\r\n");
        sb.append("   EndSect  // M12ParamList");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("   [M12InitList]");
        sb.append("\r\n");
        sb.append("   EndSect  // M12InitList");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("   [QSSContractionExpansionList]");
        sb.append("\r\n");
        sb.append("   EndSect  // QSSContractionExpansionList");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("   [QSSReachLengthsList]");
        sb.append("\r\n");
        sb.append("   EndSect  // QSSReachLengthsList");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("   [OutputGridPoints]");
        sb.append("\r\n");
        sb.append("   EndSect  // OutputGridPoints");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("   [LeakageList]");
        sb.append("\r\n");
        sb.append("   EndSect  // LeakageList");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("EndSect  // MIKE0_HD");
//        sb.append("\r\n");
//        sb.append("       G_Ice_cloudness = 0");
//        sb.append("\r\n");
//        sb.append("       G_Ice_cloud_dens = 0");
//        sb.append("\r\n");
//        sb.append("       G_Ice_wind_speed = 0");
//        sb.append("\r\n");
//        sb.append("       G_Ice_visibility = 25");
//        sb.append("\r\n");
//        sb.append("       G_Ice_precipitation = 0");
//        sb.append("\r\n");
//        sb.append("       G_Ice_thickness = 0");
//        sb.append("\r\n");
//        sb.append("       G_Ice_width = 0");
//        sb.append("\r\n");
//        sb.append("       G_Ice_quality = 0");
//        sb.append("\r\n");
//        sb.append("       G_Add_ConvG = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_ConvGA = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_DispersG = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_DispersGA = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_MassBG = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_MassBGA = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_MassBT = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_MassBTA = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_MassG = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_MassGA = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_MassT = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_MassTA = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_MBranchT = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_MBranchTA = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_OrderG = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_OrderGA = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_OrderT = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_OrderTA = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_TransG = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_TransGA = false");
//        sb.append("\r\n");
//        sb.append("       G_M12Comp = false");
//        sb.append("\r\n");
//        sb.append("       [MIKE12_Additional]");
//        sb.append("\r\n");
//        sb.append("          Mass = 0, 0, 0, 0, 0, 0, 0, 0");
//        sb.append("\r\n");
//        sb.append("          Mass_balance = 0, 0, 0, 0, 0, 0, 0, 0");
//        sb.append("\r\n");
//        sb.append("          Mass_branch = 0, 0, 0, 0");
//        sb.append("\r\n");
//        sb.append("          Decay_branch = 0, 0, 0, 0, 0, 0, 0, 0");
//        sb.append("\r\n");
//        sb.append("          Entrain_branch = 0, 0, 0, 0, 0, 0, 0, 0");
//        sb.append("\r\n");
//        sb.append("          Transport_total = 0, 0, 0, 0");
//        sb.append("\r\n");
//        sb.append("          Dispersive_trans = 0, 0, 0, 0");
//        sb.append("\r\n");
//        sb.append("          Convective_trans = 0, 0, 0, 0");
//        sb.append("\r\n");
//        sb.append("       EndSect  // MIKE12_Additional");
//        sb.append("\r\n");
//        sb.append("\r\n");
//        sb.append("       [MIKE12_Dispersion]");
//        sb.append("\r\n");
//        sb.append("          G_disp_factor = 0, 0");
//        sb.append("\r\n");
//        sb.append("          G_exponent = 0, 0");
//        sb.append("\r\n");
//        sb.append("          G_min_disp_coef = 0, 0");
//        sb.append("\r\n");
//        sb.append("          G_max_disp_coef = 100, 100");
//        sb.append("\r\n");
//        sb.append("       EndSect  // MIKE12_Dispersion");
//        sb.append("\r\n");
//        sb.append("\r\n");
//        sb.append("   EndSect  // Global_Variables");
//        sb.append("\r\n");
//        sb.append("   [InitList]");
//        sb.append("\r\n");
//        sb.append("      DATA = 1, 6, true, '', 0");
//        sb.append("\r\n");
//        sb.append("      DATA = 2, 0.03, true, '', 0");
//        sb.append("\r\n");
//        sb.append("      DATA = 3, 0, true, '', 0");
//        sb.append("\r\n");
//        sb.append("   EndSect  // InitList");
//        sb.append("\r\n");
//        sb.append("   [InitStratified]");
//        sb.append("\r\n");
//        sb.append("   EndSect  // InitStratified");
//        sb.append("\r\n");
//        sb.append("   [NonCohesList]");
//        sb.append("\r\n");
//        sb.append("   EndSect  // NonCohesList");
//        sb.append("\r\n");
//        sb.append("\r\n");
//        sb.append("   [DecayList]");
//        sb.append("\r\n");
//        sb.append("      DATA = 1, 1e-006, true, '', 0");
//        sb.append("\r\n");
//        sb.append("      DATA = 2, 1e-006, true, '', 0");
//        sb.append("\r\n");
//        sb.append("      DATA = 3, 1e-006, true, '', 0");
//        sb.append("\r\n");
//        sb.append("    EndSect  // DecayList");
//        sb.append("\r\n");
//        sb.append("\r\n");
//        sb.append("    [DispersList]");
//        sb.append("\r\n");
//        sb.append("    EndSect  // DispersList");
//        sb.append("\r\n");
//        sb.append("\r\n");
//        sb.append("    [IceDataList]");
//        sb.append("\r\n");
//        sb.append("    EndSect  // IceDataList");
//        sb.append("\r\n");
//        sb.append("\r\n");
//        sb.append("    [Cohesive_ST]");
//        sb.append("\r\n");
//        sb.append("    EndSect  // Cohesive_ST");
//        sb.append("\r\n");
//        sb.append("\r\n");
//        sb.append("    [CompList]");
//        sb.append("\r\n");
//        sb.append("       DATA = 1, 'COD', 6, 0");
//        sb.append("\r\n");
//        sb.append("       DATA = 2, '氨氮', 6, 0");
//        sb.append("\r\n");
//        sb.append("       DATA = 3, '总磷', 6, 0");
//        sb.append("\r\n");
//        sb.append("     EndSect  // CompList");
//        sb.append("\r\n");
//        sb.append("\r\n");
//        sb.append("     [LayerList]");
//        sb.append("\r\n");
//        sb.append("     EndSect  // LayerList");
//        sb.append("\r\n");
//        sb.append("\r\n");
//        sb.append("     [M12DispersList]");
//        sb.append("\r\n");
//        sb.append("     EndSect  // M12DispersList");
//        sb.append("\r\n");
//        sb.append("\r\n");
//        sb.append("EndSect  // MIKE0_AD");
        String dateb = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(Calendar.getInstance().getTime());
        String date = dateb.replaceAll("[[\\s-:punct:]]", "");

        // File f = new File("C:\\Users\\Administrator\\Desktop" + "\\" + "ad11" + date + ".ad11");//新建文件
        try {

            OutputStreamWriter osw = new OutputStreamWriter(new FileOutputStream("C:\\Users\\Administrator\\Desktop" + "\\" + "hd11" + date + ".hd11"));
            osw = new OutputStreamWriter(new FileOutputStream("C:\\Users\\Administrator\\Desktop" + "\\" + "hd11" + date + ".hd11", true), "GBK");
            osw.write(String.valueOf(sb));
            osw.flush();
            osw.close();
            System.out.println("hd11文件生成成功");

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
}
