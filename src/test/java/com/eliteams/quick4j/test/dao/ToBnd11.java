package com.eliteams.quick4j.test.dao;

import java.io.FileOutputStream;
import java.io.OutputStreamWriter;
import java.text.SimpleDateFormat;
import java.util.Calendar;

public class ToBnd11 {

    public static void main(String[] args) {
        StringBuffer sb = new StringBuffer();

        sb.append("//" + " Created" + "\t"+": ");
        String datea = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(Calendar.getInstance().getTime());
        sb.append(datea);
        sb.append("\r\n");
        sb.append("//" + " DLL id" + "\t"+": ");
        sb.append("C:\\Program Files\\DHI\\2014\\bin\\pfs2004.dll");//服务器的DHI地址；
        sb.append("\r\n");
        sb.append("//" + " PFS version"+"  : Feb  "  +"4 2015 19:27:20");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("[BndCondition]");
        sb.append("\r\n");
        sb.append("   Comment = ''");
        sb.append("\r\n");
        sb.append("   [BndCndArray]");
        sb.append("\r\n");
        sb.append("      [BndItem]");
        sb.append("\r\n");
        sb.append("         DescType = 0, 1, '社河', 0, 0, '', ''");
        sb.append("\r\n");
        sb.append("         OpenDesc = 0, 0");
        sb.append("\r\n");
        sb.append("         Inflow = true, true, false, false");
        sb.append("\r\n");
        sb.append("         ADRR = '', 0, 0");
        sb.append("\r\n");
        sb.append("         QhADM12 = 2, 1, 0");
        sb.append("\r\n");
        sb.append("         AutoCalQh = 0, 0.001, 40");
        sb.append("\r\n");
        sb.append("         BndTS = 0, ||, 0, 0, '', 0, 1");
        sb.append("\r\n");
        sb.append("         [FractionArray]");
        sb.append("\r\n");
        sb.append("         EndSect  // FractionArray");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("         [HDArray]");
        sb.append("\r\n");
        sb.append("         EndSect  // HDArray");
        sb.append("\r\n");
        sb.append("         [InflowArray]");
        sb.append("\r\n");
        sb.append("            Inflow = 2, 0, 1, ||, 0.001, 0, '', 0, 1");
        sb.append("\r\n");
        sb.append("         EndSect  // InflowArray");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("         [QhArray]");
        sb.append("\r\n");
        sb.append("         EndSect  // QhArray");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("         [ComponentArray]");
        sb.append("\r\n");
        sb.append("            Component = 1, 0, 0, |.\\2017南章党流量、水位时间序列文件.dfs0|, 1, 18, '2017台沟COD', 0, 1");
        sb.append("\r\n");
        sb.append("            Component = 2, 0, 0, |.\\2017南章党流量、水位时间序列文件.dfs0|, 0.01, 19, '2017台沟氨氮', 0, 1");
        sb.append("\r\n");
        sb.append("            Component = 3, 0, 0, |.\\2017南章党流量、水位时间序列文件.dfs0|, 0.01, 20, '2017台沟总磷', 0, 1");
        sb.append("\r\n");
        sb.append("         EndSect  // ComponentArray");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("      EndSect  // BndItem");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("   EndSect  // BndCndArray");
        sb.append("\r\n");
        sb.append("\r\n");
        sb.append("EndSect  // BndCondition");
//        sb.append("\r\n");
//        sb.append("       G_Ice_cloudness = 0");
//        sb.append("\r\n");
//        sb.append("       G_Ice_cloud_dens = 0");
//        sb.append("\r\n");
//        sb.append("       G_Ice_wind_speed = 0");
//        sb.append("\r\n");
//        sb.append("       G_Ice_visibility = 25");
//        sb.append("\r\n");
//        sb.append("       G_Ice_precipitation = 0");
//        sb.append("\r\n");
//        sb.append("       G_Ice_thickness = 0");
//        sb.append("\r\n");
//        sb.append("       G_Ice_width = 0");
//        sb.append("\r\n");
//        sb.append("       G_Ice_quality = 0");
//        sb.append("\r\n");
//        sb.append("       G_Add_ConvG = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_ConvGA = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_DispersG = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_DispersGA = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_MassBG = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_MassBGA = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_MassBT = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_MassBTA = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_MassG = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_MassGA = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_MassT = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_MassTA = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_MBranchT = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_MBranchTA = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_OrderG = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_OrderGA = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_OrderT = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_OrderTA = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_TransG = false");
//        sb.append("\r\n");
//        sb.append("       G_Add_TransGA = false");
//        sb.append("\r\n");
//        sb.append("       G_M12Comp = false");
//        sb.append("\r\n");
//        sb.append("       [MIKE12_Additional]");
//        sb.append("\r\n");
//        sb.append("          Mass = 0, 0, 0, 0, 0, 0, 0, 0");
//        sb.append("\r\n");
//        sb.append("          Mass_balance = 0, 0, 0, 0, 0, 0, 0, 0");
//        sb.append("\r\n");
//        sb.append("          Mass_branch = 0, 0, 0, 0");
//        sb.append("\r\n");
//        sb.append("          Decay_branch = 0, 0, 0, 0, 0, 0, 0, 0");
//        sb.append("\r\n");
//        sb.append("          Entrain_branch = 0, 0, 0, 0, 0, 0, 0, 0");
//        sb.append("\r\n");
//        sb.append("          Transport_total = 0, 0, 0, 0");
//        sb.append("\r\n");
//        sb.append("          Dispersive_trans = 0, 0, 0, 0");
//        sb.append("\r\n");
//        sb.append("          Convective_trans = 0, 0, 0, 0");
//        sb.append("\r\n");
//        sb.append("       EndSect  // MIKE12_Additional");
//        sb.append("\r\n");
//        sb.append("\r\n");
//        sb.append("       [MIKE12_Dispersion]");
//        sb.append("\r\n");
//        sb.append("          G_disp_factor = 0, 0");
//        sb.append("\r\n");
//        sb.append("          G_exponent = 0, 0");
//        sb.append("\r\n");
//        sb.append("          G_min_disp_coef = 0, 0");
//        sb.append("\r\n");
//        sb.append("          G_max_disp_coef = 100, 100");
//        sb.append("\r\n");
//        sb.append("       EndSect  // MIKE12_Dispersion");
//        sb.append("\r\n");
//        sb.append("\r\n");
//        sb.append("   EndSect  // Global_Variables");
//        sb.append("\r\n");
//        sb.append("   [InitList]");
//        sb.append("\r\n");
//        sb.append("      DATA = 1, 6, true, '', 0");
//        sb.append("\r\n");
//        sb.append("      DATA = 2, 0.03, true, '', 0");
//        sb.append("\r\n");
//        sb.append("      DATA = 3, 0, true, '', 0");
//        sb.append("\r\n");
//        sb.append("   EndSect  // InitList");
//        sb.append("\r\n");
//        sb.append("   [InitStratified]");
//        sb.append("\r\n");
//        sb.append("   EndSect  // InitStratified");
//        sb.append("\r\n");
//        sb.append("   [NonCohesList]");
//        sb.append("\r\n");
//        sb.append("   EndSect  // NonCohesList");
//        sb.append("\r\n");
//        sb.append("\r\n");
//        sb.append("   [DecayList]");
//        sb.append("\r\n");
//        sb.append("      DATA = 1, 1e-006, true, '', 0");
//        sb.append("\r\n");
//        sb.append("      DATA = 2, 1e-006, true, '', 0");
//        sb.append("\r\n");
//        sb.append("      DATA = 3, 1e-006, true, '', 0");
//        sb.append("\r\n");
//        sb.append("    EndSect  // DecayList");
//        sb.append("\r\n");
//        sb.append("\r\n");
//        sb.append("    [DispersList]");
//        sb.append("\r\n");
//        sb.append("    EndSect  // DispersList");
//        sb.append("\r\n");
//        sb.append("\r\n");
//        sb.append("    [IceDataList]");
//        sb.append("\r\n");
//        sb.append("    EndSect  // IceDataList");
//        sb.append("\r\n");
//        sb.append("\r\n");
//        sb.append("    [Cohesive_ST]");
//        sb.append("\r\n");
//        sb.append("    EndSect  // Cohesive_ST");
//        sb.append("\r\n");
//        sb.append("\r\n");
//        sb.append("    [CompList]");
//        sb.append("\r\n");
//        sb.append("       DATA = 1, 'COD', 6, 0");
//        sb.append("\r\n");
//        sb.append("       DATA = 2, '氨氮', 6, 0");
//        sb.append("\r\n");
//        sb.append("       DATA = 3, '总磷', 6, 0");
//        sb.append("\r\n");
//        sb.append("     EndSect  // CompList");
//        sb.append("\r\n");
//        sb.append("\r\n");
//        sb.append("     [LayerList]");
//        sb.append("\r\n");
//        sb.append("     EndSect  // LayerList");
//        sb.append("\r\n");
//        sb.append("\r\n");
//        sb.append("     [M12DispersList]");
//        sb.append("\r\n");
//        sb.append("     EndSect  // M12DispersList");
//        sb.append("\r\n");
//        sb.append("\r\n");
//        sb.append("EndSect  // MIKE0_AD");
        String dateb = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(Calendar.getInstance().getTime());
        String date = dateb.replaceAll("[[\\s-:punct:]]", "");

        // File f = new File("C:\\Users\\Administrator\\Desktop" + "\\" + "ad11" + date + ".ad11");//新建文件
        try {

            OutputStreamWriter osw = new OutputStreamWriter(new FileOutputStream("C:\\Users\\Administrator\\Desktop" + "\\" + "bnd11" + date + ".bnd11"));
            osw = new OutputStreamWriter(new FileOutputStream("C:\\Users\\Administrator\\Desktop" + "\\" + "bnd11" + date + ".bnd11", true), "GBK");
            osw.write(String.valueOf(sb));
            osw.flush();
            osw.close();
            System.out.println("bnd11文件生成成功");

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
}
