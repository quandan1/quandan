<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eliteams.quick4j.web.dao.PollFactoryMapper">
  <resultMap id="BaseResultMap" type="com.eliteams.quick4j.web.model.PollFactory">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="TJNF" property="tjnf" jdbcType="INTEGER" />
    <result column="XZQHDM" property="xzqhdm" jdbcType="VARCHAR" />
    <result column="XZQHMC" property="xzqhmc" jdbcType="VARCHAR" />
    <result column="SHXYDM" property="shxydm" jdbcType="VARCHAR" />
    <result column="ZZJGDM" property="zzjgdm" jdbcType="VARCHAR" />
    <result column="DWMC_GZ" property="dwmcGz" jdbcType="VARCHAR" />
    <result column="SSDM" property="ssdm" jdbcType="VARCHAR" />
    <result column="SSKZDY" property="sskzdy" jdbcType="VARCHAR" />
    <result column="YYDWMC" property="yydwmc" jdbcType="VARCHAR" />
    <result column="FDDBR" property="fddbr" jdbcType="VARCHAR" />
    <result column="QYXXDZ_S_ZZQ_ZXS" property="qyxxdzSZzqZxs" jdbcType="VARCHAR" />
    <result column="QYXXDZ_DQ_S_Z_M" property="qyxxdzDqSZM" jdbcType="VARCHAR" />
    <result column="QYXXDZ_X_Q_S_Q" property="qyxxdzXQSQ" jdbcType="VARCHAR" />
    <result column="QYXXDZ_X_Z" property="qyxxdzXZ" jdbcType="VARCHAR" />
    <result column="QYXXDZ_J_C_MPH" property="qyxxdzJCMph" jdbcType="VARCHAR" />
    <result column="ZXJD_D" property="zxjdD" jdbcType="INTEGER" />
    <result column="ZXJD_F" property="zxjdF" jdbcType="INTEGER" />
    <result column="ZXJD_M" property="zxjdM" jdbcType="INTEGER" />
    <result column="JD" property="jd" jdbcType="DOUBLE" />
    <result column="ZXWD_D" property="zxwdD" jdbcType="INTEGER" />
    <result column="ZXWD_F" property="zxwdF" jdbcType="INTEGER" />
    <result column="ZXWD_M" property="zxwdM" jdbcType="INTEGER" />
    <result column="WD" property="wd" jdbcType="DOUBLE" />
    <result column="LXFSDHHM" property="lxfsdhhm" jdbcType="VARCHAR" />
    <result column="LXFSLXR" property="lxfslxr" jdbcType="VARCHAR" />
    <result column="LXFSCZHM" property="lxfsczhm" jdbcType="VARCHAR" />
    <result column="LXFSYZBM" property="lxfsyzbm" jdbcType="VARCHAR" />
    <result column="WSCLSSLX" property="wsclsslx" jdbcType="VARCHAR" />
    <result column="WSCLCSMC" property="wsclcsmc" jdbcType="VARCHAR" />
    <result column="JCSJ" property="jcsj" jdbcType="INTEGER" />
    <result column="WSCLJB" property="wscljb" jdbcType="VARCHAR" />
    <result column="WSCLFFMC1" property="wsclffmc1" jdbcType="VARCHAR" />
    <result column="WSCLFFDM1" property="wsclffdm1" jdbcType="VARCHAR" />
    <result column="WSCLFFMC2" property="wsclffmc2" jdbcType="VARCHAR" />
    <result column="WSCLFFDM2" property="wsclffdm2" jdbcType="VARCHAR" />
    <result column="WSCLFFMC3" property="wsclffmc3" jdbcType="VARCHAR" />
    <result column="WSCLFFDM3" property="wsclffdm3" jdbcType="VARCHAR" />
    <result column="PSQXLXMC" property="psqxlxmc" jdbcType="VARCHAR" />
    <result column="PSQXLXDM" property="psqxlxdm" jdbcType="VARCHAR" />
    <result column="SNSTMC" property="snstmc" jdbcType="VARCHAR" />
    <result column="SNSTDM" property="snstdm" jdbcType="VARCHAR" />
    <result column="WNYYXHZZ" property="wnyyxhzz" jdbcType="VARCHAR" />
    <result column="WNYYXHZZMC" property="wnyyxhzzmc" jdbcType="VARCHAR" />
    <result column="ZXPFBZ" property="zxpfbz" jdbcType="VARCHAR" />
    <result column="ZXPFBZMC" property="zxpfbzmc" jdbcType="VARCHAR" />
    <result column="ZXPFBZXZJB" property="zxpfbzxzjb" jdbcType="VARCHAR" />
    <result column="ZXPFBZXZJBMC" property="zxpfbzxzjbmc" jdbcType="VARCHAR" />
    <result column="YXTS_T" property="yxtsT" jdbcType="INTEGER" />
    <result column="LJWCTZ_WY" property="ljwctzWy" jdbcType="DOUBLE" />
    <result column="XZGDZCTZ_WY" property="xzgdzctzWy" jdbcType="DOUBLE" />
    <result column="YXFY_WY" property="yxfyWy" jdbcType="DOUBLE" />
    <result column="YDL_WQWS" property="ydlWqws" jdbcType="DECIMAL" />
    <result column="WSSJCLNL_D_R" property="wssjclnlDR" jdbcType="DOUBLE" />
    <result column="WSSJCLL_WD" property="wssjcllWd" jdbcType="DOUBLE" />
    <result column="QZ_CLSHWSL_WD" property="qzClshwslWd" jdbcType="DOUBLE" />
    <result column="QZ_CLGYFSL_WD" property="qzClgyfslWd" jdbcType="DOUBLE" />
    <result column="QZ_CLBXQWDSL_WD" property="qzClbxqwdslWd" jdbcType="DOUBLE" />
    <result column="ZSSSCL_WD" property="zsssclWd" jdbcType="DOUBLE" />
    <result column="ZSSLYL_WD" property="zsslylWd" jdbcType="DOUBLE" />
    <result column="QZ_GYYSL_WD" property="qzGyyslWd" jdbcType="DOUBLE" />
    <result column="QZ_SZYS_WD" property="qzSzysWd" jdbcType="DOUBLE" />
    <result column="QZ_JGYSL_WD" property="qzJgyslWd" jdbcType="DOUBLE" />
    <result column="WNCSL_D" property="wncslD" jdbcType="DOUBLE" />
    <result column="WNCZL_D" property="wnczlD" jdbcType="DOUBLE" />
    <result column="QZ_TDLYL_D" property="qzTdlylD" jdbcType="DOUBLE" />
    <result column="QZ_TMCZL_D" property="qzTmczlD" jdbcType="DOUBLE" />
    <result column="QZ_JZCLLYL_D" property="qzJzcllylD" jdbcType="DOUBLE" />
    <result column="QZ_FSCZL_D" property="qzFsczlD" jdbcType="DOUBLE" />
    <result column="WNQDDQL_D" property="wnqddqlD" jdbcType="DOUBLE" />
    <result column="WNYYXHCQL_LFM" property="wnyyxhcqlLfm" jdbcType="DOUBLE" />
    <result column="HXXYLQCL_D" property="hxxylqclD" jdbcType="DOUBLE" />
    <result column="HXXYLJKND_HK_S" property="hxxyljkndHkS" jdbcType="DOUBLE" />
    <result column="HXXYLCKND_HK_S" property="hxxylckndHkS" jdbcType="DOUBLE" />
    <result column="SHXYLQCL_D" property="shxylqclD" jdbcType="DOUBLE" />
    <result column="SHXYLJKND_HK_S" property="shxyljkndHkS" jdbcType="DOUBLE" />
    <result column="SHXYLCKND_HK_S" property="shxylckndHkS" jdbcType="DOUBLE" />
    <result column="XFWQCL_D" property="xfwqclD" jdbcType="DOUBLE" />
    <result column="XFWJKND_HK_S" property="xfwjkndHkS" jdbcType="DOUBLE" />
    <result column="XFWCKND_HK_S" property="xfwckndHkS" jdbcType="DOUBLE" />
    <result column="DZWYQCL_D" property="dzwyqclD" jdbcType="DOUBLE" />
    <result column="DZWYJKND_HK_S" property="dzwyjkndHkS" jdbcType="DOUBLE" />
    <result column="DZWYCKND_HK_S" property="dzwyckndHkS" jdbcType="DOUBLE" />
    <result column="SYLQCL_D" property="sylqclD" jdbcType="DOUBLE" />
    <result column="SYLJKND_HK_S" property="syljkndHkS" jdbcType="DOUBLE" />
    <result column="SYLCKND_HK_S" property="sylckndHkS" jdbcType="DOUBLE" />
    <result column="YLZHXJQCL_D" property="ylzhxjqclD" jdbcType="DOUBLE" />
    <result column="YLZHXJJKND_HK_S" property="ylzhxjjkndHkS" jdbcType="DOUBLE" />
    <result column="YLZHXJCKND_HK_S" property="ylzhxjckndHkS" jdbcType="DOUBLE" />
    <result column="ADQCL_D" property="adqclD" jdbcType="DOUBLE" />
    <result column="ADJKND_HK_S" property="adjkndHkS" jdbcType="DOUBLE" />
    <result column="ADCKND_HK_S" property="adckndHkS" jdbcType="DOUBLE" />
    <result column="YLQCL_D" property="ylqclD" jdbcType="DOUBLE" />
    <result column="YLJKND_HK_S" property="yljkndHkS" jdbcType="DOUBLE" />
    <result column="YLCKND_HK_S" property="ylckndHkS" jdbcType="DOUBLE" />
    <result column="ZDQCL_D" property="zdqclD" jdbcType="DOUBLE" />
    <result column="ZDJKND_HK_S" property="zdjkndHkS" jdbcType="DOUBLE" />
    <result column="ZDCKND_HK_S" property="zdckndHkS" jdbcType="DOUBLE" />
    <result column="ZLQCL_QK" property="zlqclQk" jdbcType="DOUBLE" />
    <result column="ZLJKND_HK_S" property="zljkndHkS" jdbcType="DOUBLE" />
    <result column="ZLCKND_HK_S" property="zlckndHkS" jdbcType="DOUBLE" />
    <result column="HFFQCL_QK" property="hffqclQk" jdbcType="DOUBLE" />
    <result column="HFFJKND_HK_S" property="hffjkndHkS" jdbcType="DOUBLE" />
    <result column="HFFCKND_HK_S" property="hffckndHkS" jdbcType="DOUBLE" />
    <result column="QHWQCL_QK" property="qhwqclQk" jdbcType="DOUBLE" />
    <result column="QHWJKND_HK_S" property="qhwjkndHkS" jdbcType="DOUBLE" />
    <result column="QHWCKND_HK_S" property="qhwckndHkS" jdbcType="DOUBLE" />
    <result column="SQCL_QK" property="sqclQk" jdbcType="DOUBLE" />
    <result column="SJKND_HK_S" property="sjkndHkS" jdbcType="DOUBLE" />
    <result column="SCKND_HK_S" property="sckndHkS" jdbcType="DOUBLE" />
    <result column="QQCL_QK" property="qqclQk" jdbcType="DOUBLE" />
    <result column="QJKND_HK_S" property="qjkndHkS" jdbcType="DOUBLE" />
    <result column="QCKND_HK_S" property="qckndHkS" jdbcType="DOUBLE" />
    <result column="GQCL_QK" property="gqclQk" jdbcType="DOUBLE" />
    <result column="GJKND_HK_S" property="gjkndHkS" jdbcType="DOUBLE" />
    <result column="GCKND_HK_S" property="gckndHkS" jdbcType="DOUBLE" />
    <result column="GQCL_QK_dup1" property="gqclQkDup1" jdbcType="DOUBLE" />
    <result column="GJKND_WK_S" property="gjkndWkS" jdbcType="DOUBLE" />
    <result column="GCKND_WK_S" property="gckndWkS" jdbcType="DOUBLE" />
    <result column="ZGQCL_QK" property="zgqclQk" jdbcType="DOUBLE" />
    <result column="ZGJKND_HK_S" property="zgjkndHkS" jdbcType="DOUBLE" />
    <result column="ZGCKND_HK_S" property="zgckndHkS" jdbcType="DOUBLE" />
    <result column="LJGQCL_QK" property="ljgqclQk" jdbcType="DOUBLE" />
    <result column="LJGJKND_HK_S" property="ljgjkndHkS" jdbcType="DOUBLE" />
    <result column="LJGCKND_HK_S" property="ljgckndHkS" jdbcType="DOUBLE" />
    <result column="GY_CLSL_WD_R" property="gyClslWdR" jdbcType="DOUBLE" />
    <result column="GY_XZCLSL_WD_R" property="gyXzclslWdR" jdbcType="DOUBLE" />
    <result column="GY_YXTS_T" property="gyYxtsT" jdbcType="DOUBLE" />
    <result column="GY_CODJKND_HK_S" property="gyCodjkndHkS" jdbcType="DOUBLE" />
    <result column="GY_CODCKND_HK_S" property="gyCodckndHkS" jdbcType="DOUBLE" />
    <result column="GY_ADJKND_HK_S" property="gyAdjkndHkS" jdbcType="DOUBLE" />
    <result column="GY_ADCKND_HK_S" property="gyAdckndHkS" jdbcType="DOUBLE" />
    <result column="SH_CLSL_WD_R" property="shClslWdR" jdbcType="DOUBLE" />
    <result column="SH_XZCLSL_WD_R" property="shXzclslWdR" jdbcType="DOUBLE" />
    <result column="SH_CODJKND_HK_S" property="shCodjkndHkS" jdbcType="DOUBLE" />
    <result column="SH_CODCKND_HK_S" property="shCodckndHkS" jdbcType="DOUBLE" />
    <result column="SH_ADJKND_HK_S" property="shAdjkndHkS" jdbcType="DOUBLE" />
    <result column="SH_ADCKND_HK_S" property="shAdckndHkS" jdbcType="DOUBLE" />
    <result column="HDXZSHCODQCL_D" property="hdxzshcodqclD" jdbcType="DOUBLE" />
    <result column="HDXZSHADQCL_D" property="hdxzshadqclD" jdbcType="DOUBLE" />
    <result column="JYTLC_M" property="jytlcM" jdbcType="DOUBLE" />
    <result column="BZ" property="bz" jdbcType="VARCHAR" />
    <result column="is_del" property="isDel" jdbcType="INTEGER" />
    <result column="poll_bl1" property="pollBl1" jdbcType="VARCHAR" />
    <result column="poll_bl2" property="pollBl2" jdbcType="VARCHAR" />
    <result column="poll_bl3" property="pollBl3" jdbcType="VARCHAR" />
    <result column="poll_bl4" property="pollBl4" jdbcType="VARCHAR" />
    <result column="poll_bl5" property="pollBl5" jdbcType="VARCHAR" />
    <result column="poll_bl6" property="pollBl6" jdbcType="VARCHAR" />
    <result column="poll_bl7" property="pollBl7" jdbcType="VARCHAR" />
    <result column="poll_bl8" property="pollBl8" jdbcType="VARCHAR" />
    <result column="poll_bl9" property="pollBl9" jdbcType="VARCHAR" />
    <result column="poll_bl10" property="pollBl10" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, TJNF, XZQHDM, XZQHMC, SHXYDM, ZZJGDM, DWMC_GZ, SSDM, SSKZDY, YYDWMC, FDDBR, QYXXDZ_S_ZZQ_ZXS,
    QYXXDZ_DQ_S_Z_M, QYXXDZ_X_Q_S_Q, QYXXDZ_X_Z, QYXXDZ_J_C_MPH, ZXJD_D, ZXJD_F, ZXJD_M,
    JD, ZXWD_D, ZXWD_F, ZXWD_M, WD, LXFSDHHM, LXFSLXR, LXFSCZHM, LXFSYZBM, WSCLSSLX,
    WSCLCSMC, JCSJ, WSCLJB, WSCLFFMC1, WSCLFFDM1, WSCLFFMC2, WSCLFFDM2, WSCLFFMC3, WSCLFFDM3,
    PSQXLXMC, PSQXLXDM, SNSTMC, SNSTDM, WNYYXHZZ, WNYYXHZZMC, ZXPFBZ, ZXPFBZMC, ZXPFBZXZJB,
    ZXPFBZXZJBMC, YXTS_T, LJWCTZ_WY, XZGDZCTZ_WY, YXFY_WY, YDL_WQWS, WSSJCLNL_D_R, WSSJCLL_WD,
    QZ_CLSHWSL_WD, QZ_CLGYFSL_WD, QZ_CLBXQWDSL_WD, ZSSSCL_WD, ZSSLYL_WD, QZ_GYYSL_WD,
    QZ_SZYS_WD, QZ_JGYSL_WD, WNCSL_D, WNCZL_D, QZ_TDLYL_D, QZ_TMCZL_D, QZ_JZCLLYL_D,
    QZ_FSCZL_D, WNQDDQL_D, WNYYXHCQL_LFM, HXXYLQCL_D, HXXYLJKND_HK_S, HXXYLCKND_HK_S,
    SHXYLQCL_D, SHXYLJKND_HK_S, SHXYLCKND_HK_S, XFWQCL_D, XFWJKND_HK_S, XFWCKND_HK_S,
    DZWYQCL_D, DZWYJKND_HK_S, DZWYCKND_HK_S, SYLQCL_D, SYLJKND_HK_S, SYLCKND_HK_S, YLZHXJQCL_D,
    YLZHXJJKND_HK_S, YLZHXJCKND_HK_S, ADQCL_D, ADJKND_HK_S, ADCKND_HK_S, YLQCL_D, YLJKND_HK_S,
    YLCKND_HK_S, ZDQCL_D, ZDJKND_HK_S, ZDCKND_HK_S, ZLQCL_QK, ZLJKND_HK_S, ZLCKND_HK_S,
    HFFQCL_QK, HFFJKND_HK_S, HFFCKND_HK_S, QHWQCL_QK, QHWJKND_HK_S, QHWCKND_HK_S, SQCL_QK,
    SJKND_HK_S, SCKND_HK_S, QQCL_QK, QJKND_HK_S, QCKND_HK_S, GQCL_QK, GJKND_HK_S, GCKND_HK_S,
    GQCL_QK_dup1, GJKND_WK_S, GCKND_WK_S, ZGQCL_QK, ZGJKND_HK_S, ZGCKND_HK_S, LJGQCL_QK,
    LJGJKND_HK_S, LJGCKND_HK_S, GY_CLSL_WD_R, GY_XZCLSL_WD_R, GY_YXTS_T, GY_CODJKND_HK_S,
    GY_CODCKND_HK_S, GY_ADJKND_HK_S, GY_ADCKND_HK_S, SH_CLSL_WD_R, SH_XZCLSL_WD_R, SH_CODJKND_HK_S,
    SH_CODCKND_HK_S, SH_ADJKND_HK_S, SH_ADCKND_HK_S, HDXZSHCODQCL_D, HDXZSHADQCL_D, JYTLC_M,
    BZ, is_del, poll_bl1, poll_bl2, poll_bl3, poll_bl4, poll_bl5, poll_bl6, poll_bl7,
    poll_bl8, poll_bl9, poll_bl10
  </sql>
  <select id="selectByExample" parameterType="com.eliteams.quick4j.web.model.PollFactoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from poll_factory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from poll_factory
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from poll_factory
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.eliteams.quick4j.web.model.PollFactoryExample">
    delete from poll_factory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.eliteams.quick4j.web.model.PollFactory">
    insert into poll_factory (id, TJNF, XZQHDM,
                              XZQHMC, SHXYDM, ZZJGDM,
                              DWMC_GZ, SSDM, SSKZDY,
                              YYDWMC, FDDBR, QYXXDZ_S_ZZQ_ZXS,
                              QYXXDZ_DQ_S_Z_M, QYXXDZ_X_Q_S_Q, QYXXDZ_X_Z,
                              QYXXDZ_J_C_MPH, ZXJD_D, ZXJD_F,
                              ZXJD_M, JD, ZXWD_D, ZXWD_F,
                              ZXWD_M, WD, LXFSDHHM,
                              LXFSLXR, LXFSCZHM, LXFSYZBM,
                              WSCLSSLX, WSCLCSMC, JCSJ,
                              WSCLJB, WSCLFFMC1, WSCLFFDM1,
                              WSCLFFMC2, WSCLFFDM2, WSCLFFMC3,
                              WSCLFFDM3, PSQXLXMC, PSQXLXDM,
                              SNSTMC, SNSTDM, WNYYXHZZ,
                              WNYYXHZZMC, ZXPFBZ, ZXPFBZMC,
                              ZXPFBZXZJB, ZXPFBZXZJBMC, YXTS_T,
                              LJWCTZ_WY, XZGDZCTZ_WY, YXFY_WY,
                              YDL_WQWS, WSSJCLNL_D_R, WSSJCLL_WD,
                              QZ_CLSHWSL_WD, QZ_CLGYFSL_WD, QZ_CLBXQWDSL_WD,
                              ZSSSCL_WD, ZSSLYL_WD, QZ_GYYSL_WD,
                              QZ_SZYS_WD, QZ_JGYSL_WD, WNCSL_D,
                              WNCZL_D, QZ_TDLYL_D, QZ_TMCZL_D,
                              QZ_JZCLLYL_D, QZ_FSCZL_D, WNQDDQL_D,
                              WNYYXHCQL_LFM, HXXYLQCL_D, HXXYLJKND_HK_S,
                              HXXYLCKND_HK_S, SHXYLQCL_D, SHXYLJKND_HK_S,
                              SHXYLCKND_HK_S, XFWQCL_D, XFWJKND_HK_S,
                              XFWCKND_HK_S, DZWYQCL_D, DZWYJKND_HK_S,
                              DZWYCKND_HK_S, SYLQCL_D, SYLJKND_HK_S,
                              SYLCKND_HK_S, YLZHXJQCL_D, YLZHXJJKND_HK_S,
                              YLZHXJCKND_HK_S, ADQCL_D, ADJKND_HK_S,
                              ADCKND_HK_S, YLQCL_D, YLJKND_HK_S,
                              YLCKND_HK_S, ZDQCL_D, ZDJKND_HK_S,
                              ZDCKND_HK_S, ZLQCL_QK, ZLJKND_HK_S,
                              ZLCKND_HK_S, HFFQCL_QK, HFFJKND_HK_S,
                              HFFCKND_HK_S, QHWQCL_QK, QHWJKND_HK_S,
                              QHWCKND_HK_S, SQCL_QK, SJKND_HK_S,
                              SCKND_HK_S, QQCL_QK, QJKND_HK_S,
                              QCKND_HK_S, GQCL_QK, GJKND_HK_S,
                              GCKND_HK_S, GQCL_QK_dup1, GJKND_WK_S,
                              GCKND_WK_S, ZGQCL_QK, ZGJKND_HK_S,
                              ZGCKND_HK_S, LJGQCL_QK, LJGJKND_HK_S,
                              LJGCKND_HK_S, GY_CLSL_WD_R, GY_XZCLSL_WD_R,
                              GY_YXTS_T, GY_CODJKND_HK_S, GY_CODCKND_HK_S,
                              GY_ADJKND_HK_S, GY_ADCKND_HK_S, SH_CLSL_WD_R,
                              SH_XZCLSL_WD_R, SH_CODJKND_HK_S, SH_CODCKND_HK_S,
                              SH_ADJKND_HK_S, SH_ADCKND_HK_S, HDXZSHCODQCL_D,
                              HDXZSHADQCL_D, JYTLC_M, BZ,
                              is_del, poll_bl1, poll_bl2,
                              poll_bl3, poll_bl4, poll_bl5,
                              poll_bl6, poll_bl7, poll_bl8,
                              poll_bl9, poll_bl10)
    values (#{id,jdbcType=INTEGER}, #{tjnf,jdbcType=INTEGER}, #{xzqhdm,jdbcType=VARCHAR},
            #{xzqhmc,jdbcType=VARCHAR}, #{shxydm,jdbcType=VARCHAR}, #{zzjgdm,jdbcType=VARCHAR},
            #{dwmcGz,jdbcType=VARCHAR}, #{ssdm,jdbcType=VARCHAR}, #{sskzdy,jdbcType=VARCHAR},
            #{yydwmc,jdbcType=VARCHAR}, #{fddbr,jdbcType=VARCHAR}, #{qyxxdzSZzqZxs,jdbcType=VARCHAR},
            #{qyxxdzDqSZM,jdbcType=VARCHAR}, #{qyxxdzXQSQ,jdbcType=VARCHAR}, #{qyxxdzXZ,jdbcType=VARCHAR},
            #{qyxxdzJCMph,jdbcType=VARCHAR}, #{zxjdD,jdbcType=INTEGER}, #{zxjdF,jdbcType=INTEGER},
            #{zxjdM,jdbcType=INTEGER}, #{jd,jdbcType=DOUBLE}, #{zxwdD,jdbcType=INTEGER}, #{zxwdF,jdbcType=INTEGER},
            #{zxwdM,jdbcType=INTEGER}, #{wd,jdbcType=DOUBLE}, #{lxfsdhhm,jdbcType=VARCHAR},
            #{lxfslxr,jdbcType=VARCHAR}, #{lxfsczhm,jdbcType=VARCHAR}, #{lxfsyzbm,jdbcType=VARCHAR},
            #{wsclsslx,jdbcType=VARCHAR}, #{wsclcsmc,jdbcType=VARCHAR}, #{jcsj,jdbcType=INTEGER},
            #{wscljb,jdbcType=VARCHAR}, #{wsclffmc1,jdbcType=VARCHAR}, #{wsclffdm1,jdbcType=VARCHAR},
            #{wsclffmc2,jdbcType=VARCHAR}, #{wsclffdm2,jdbcType=VARCHAR}, #{wsclffmc3,jdbcType=VARCHAR},
            #{wsclffdm3,jdbcType=VARCHAR}, #{psqxlxmc,jdbcType=VARCHAR}, #{psqxlxdm,jdbcType=VARCHAR},
            #{snstmc,jdbcType=VARCHAR}, #{snstdm,jdbcType=VARCHAR}, #{wnyyxhzz,jdbcType=VARCHAR},
            #{wnyyxhzzmc,jdbcType=VARCHAR}, #{zxpfbz,jdbcType=VARCHAR}, #{zxpfbzmc,jdbcType=VARCHAR},
            #{zxpfbzxzjb,jdbcType=VARCHAR}, #{zxpfbzxzjbmc,jdbcType=VARCHAR}, #{yxtsT,jdbcType=INTEGER},
            #{ljwctzWy,jdbcType=DOUBLE}, #{xzgdzctzWy,jdbcType=DOUBLE}, #{yxfyWy,jdbcType=DOUBLE},
            #{ydlWqws,jdbcType=DECIMAL}, #{wssjclnlDR,jdbcType=DOUBLE}, #{wssjcllWd,jdbcType=DOUBLE},
            #{qzClshwslWd,jdbcType=DOUBLE}, #{qzClgyfslWd,jdbcType=DOUBLE}, #{qzClbxqwdslWd,jdbcType=DOUBLE},
            #{zsssclWd,jdbcType=DOUBLE}, #{zsslylWd,jdbcType=DOUBLE}, #{qzGyyslWd,jdbcType=DOUBLE},
            #{qzSzysWd,jdbcType=DOUBLE}, #{qzJgyslWd,jdbcType=DOUBLE}, #{wncslD,jdbcType=DOUBLE},
            #{wnczlD,jdbcType=DOUBLE}, #{qzTdlylD,jdbcType=DOUBLE}, #{qzTmczlD,jdbcType=DOUBLE},
            #{qzJzcllylD,jdbcType=DOUBLE}, #{qzFsczlD,jdbcType=DOUBLE}, #{wnqddqlD,jdbcType=DOUBLE},
            #{wnyyxhcqlLfm,jdbcType=DOUBLE}, #{hxxylqclD,jdbcType=DOUBLE}, #{hxxyljkndHkS,jdbcType=DOUBLE},
            #{hxxylckndHkS,jdbcType=DOUBLE}, #{shxylqclD,jdbcType=DOUBLE}, #{shxyljkndHkS,jdbcType=DOUBLE},
            #{shxylckndHkS,jdbcType=DOUBLE}, #{xfwqclD,jdbcType=DOUBLE}, #{xfwjkndHkS,jdbcType=DOUBLE},
            #{xfwckndHkS,jdbcType=DOUBLE}, #{dzwyqclD,jdbcType=DOUBLE}, #{dzwyjkndHkS,jdbcType=DOUBLE},
            #{dzwyckndHkS,jdbcType=DOUBLE}, #{sylqclD,jdbcType=DOUBLE}, #{syljkndHkS,jdbcType=DOUBLE},
            #{sylckndHkS,jdbcType=DOUBLE}, #{ylzhxjqclD,jdbcType=DOUBLE}, #{ylzhxjjkndHkS,jdbcType=DOUBLE},
            #{ylzhxjckndHkS,jdbcType=DOUBLE}, #{adqclD,jdbcType=DOUBLE}, #{adjkndHkS,jdbcType=DOUBLE},
            #{adckndHkS,jdbcType=DOUBLE}, #{ylqclD,jdbcType=DOUBLE}, #{yljkndHkS,jdbcType=DOUBLE},
            #{ylckndHkS,jdbcType=DOUBLE}, #{zdqclD,jdbcType=DOUBLE}, #{zdjkndHkS,jdbcType=DOUBLE},
            #{zdckndHkS,jdbcType=DOUBLE}, #{zlqclQk,jdbcType=DOUBLE}, #{zljkndHkS,jdbcType=DOUBLE},
            #{zlckndHkS,jdbcType=DOUBLE}, #{hffqclQk,jdbcType=DOUBLE}, #{hffjkndHkS,jdbcType=DOUBLE},
            #{hffckndHkS,jdbcType=DOUBLE}, #{qhwqclQk,jdbcType=DOUBLE}, #{qhwjkndHkS,jdbcType=DOUBLE},
            #{qhwckndHkS,jdbcType=DOUBLE}, #{sqclQk,jdbcType=DOUBLE}, #{sjkndHkS,jdbcType=DOUBLE},
            #{sckndHkS,jdbcType=DOUBLE}, #{qqclQk,jdbcType=DOUBLE}, #{qjkndHkS,jdbcType=DOUBLE},
            #{qckndHkS,jdbcType=DOUBLE}, #{gqclQk,jdbcType=DOUBLE}, #{gjkndHkS,jdbcType=DOUBLE},
            #{gckndHkS,jdbcType=DOUBLE}, #{gqclQkDup1,jdbcType=DOUBLE}, #{gjkndWkS,jdbcType=DOUBLE},
            #{gckndWkS,jdbcType=DOUBLE}, #{zgqclQk,jdbcType=DOUBLE}, #{zgjkndHkS,jdbcType=DOUBLE},
            #{zgckndHkS,jdbcType=DOUBLE}, #{ljgqclQk,jdbcType=DOUBLE}, #{ljgjkndHkS,jdbcType=DOUBLE},
            #{ljgckndHkS,jdbcType=DOUBLE}, #{gyClslWdR,jdbcType=DOUBLE}, #{gyXzclslWdR,jdbcType=DOUBLE},
            #{gyYxtsT,jdbcType=DOUBLE}, #{gyCodjkndHkS,jdbcType=DOUBLE}, #{gyCodckndHkS,jdbcType=DOUBLE},
            #{gyAdjkndHkS,jdbcType=DOUBLE}, #{gyAdckndHkS,jdbcType=DOUBLE}, #{shClslWdR,jdbcType=DOUBLE},
            #{shXzclslWdR,jdbcType=DOUBLE}, #{shCodjkndHkS,jdbcType=DOUBLE}, #{shCodckndHkS,jdbcType=DOUBLE},
            #{shAdjkndHkS,jdbcType=DOUBLE}, #{shAdckndHkS,jdbcType=DOUBLE}, #{hdxzshcodqclD,jdbcType=DOUBLE},
            #{hdxzshadqclD,jdbcType=DOUBLE}, #{jytlcM,jdbcType=DOUBLE}, #{bz,jdbcType=VARCHAR},
            #{isDel,jdbcType=INTEGER}, #{pollBl1,jdbcType=VARCHAR}, #{pollBl2,jdbcType=VARCHAR},
            #{pollBl3,jdbcType=VARCHAR}, #{pollBl4,jdbcType=VARCHAR}, #{pollBl5,jdbcType=VARCHAR},
            #{pollBl6,jdbcType=VARCHAR}, #{pollBl7,jdbcType=VARCHAR}, #{pollBl8,jdbcType=VARCHAR},
            #{pollBl9,jdbcType=VARCHAR}, #{pollBl10,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.eliteams.quick4j.web.model.PollFactory">
    insert into poll_factory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null" >
        id,
      </if>
      <if test="tjnf != null" >
        TJNF,
      </if>
      <if test="xzqhdm != null" >
        XZQHDM,
      </if>
      <if test="xzqhmc != null" >
        XZQHMC,
      </if>
      <if test="shxydm != null" >
        SHXYDM,
      </if>
      <if test="zzjgdm != null" >
        ZZJGDM,
      </if>
      <if test="dwmcGz != null" >
        DWMC_GZ,
      </if>
      <if test="ssdm != null" >
        SSDM,
      </if>
      <if test="sskzdy != null" >
        SSKZDY,
      </if>
      <if test="yydwmc != null" >
        YYDWMC,
      </if>
      <if test="fddbr != null" >
        FDDBR,
      </if>
      <if test="qyxxdzSZzqZxs != null" >
        QYXXDZ_S_ZZQ_ZXS,
      </if>
      <if test="qyxxdzDqSZM != null" >
        QYXXDZ_DQ_S_Z_M,
      </if>
      <if test="qyxxdzXQSQ != null" >
        QYXXDZ_X_Q_S_Q,
      </if>
      <if test="qyxxdzXZ != null" >
        QYXXDZ_X_Z,
      </if>
      <if test="qyxxdzJCMph != null" >
        QYXXDZ_J_C_MPH,
      </if>
      <if test="zxjdD != null" >
        ZXJD_D,
      </if>
      <if test="zxjdF != null" >
        ZXJD_F,
      </if>
      <if test="zxjdM != null" >
        ZXJD_M,
      </if>
      <if test="jd != null" >
        JD,
      </if>
      <if test="zxwdD != null" >
        ZXWD_D,
      </if>
      <if test="zxwdF != null" >
        ZXWD_F,
      </if>
      <if test="zxwdM != null" >
        ZXWD_M,
      </if>
      <if test="wd != null" >
        WD,
      </if>
      <if test="lxfsdhhm != null" >
        LXFSDHHM,
      </if>
      <if test="lxfslxr != null" >
        LXFSLXR,
      </if>
      <if test="lxfsczhm != null" >
        LXFSCZHM,
      </if>
      <if test="lxfsyzbm != null" >
        LXFSYZBM,
      </if>
      <if test="wsclsslx != null" >
        WSCLSSLX,
      </if>
      <if test="wsclcsmc != null" >
        WSCLCSMC,
      </if>
      <if test="jcsj != null" >
        JCSJ,
      </if>
      <if test="wscljb != null" >
        WSCLJB,
      </if>
      <if test="wsclffmc1 != null" >
        WSCLFFMC1,
      </if>
      <if test="wsclffdm1 != null" >
        WSCLFFDM1,
      </if>
      <if test="wsclffmc2 != null" >
        WSCLFFMC2,
      </if>
      <if test="wsclffdm2 != null" >
        WSCLFFDM2,
      </if>
      <if test="wsclffmc3 != null" >
        WSCLFFMC3,
      </if>
      <if test="wsclffdm3 != null" >
        WSCLFFDM3,
      </if>
      <if test="psqxlxmc != null" >
        PSQXLXMC,
      </if>
      <if test="psqxlxdm != null" >
        PSQXLXDM,
      </if>
      <if test="snstmc != null" >
        SNSTMC,
      </if>
      <if test="snstdm != null" >
        SNSTDM,
      </if>
      <if test="wnyyxhzz != null" >
        WNYYXHZZ,
      </if>
      <if test="wnyyxhzzmc != null" >
        WNYYXHZZMC,
      </if>
      <if test="zxpfbz != null" >
        ZXPFBZ,
      </if>
      <if test="zxpfbzmc != null" >
        ZXPFBZMC,
      </if>
      <if test="zxpfbzxzjb != null" >
        ZXPFBZXZJB,
      </if>
      <if test="zxpfbzxzjbmc != null" >
        ZXPFBZXZJBMC,
      </if>
      <if test="yxtsT != null" >
        YXTS_T,
      </if>
      <if test="ljwctzWy != null" >
        LJWCTZ_WY,
      </if>
      <if test="xzgdzctzWy != null" >
        XZGDZCTZ_WY,
      </if>
      <if test="yxfyWy != null" >
        YXFY_WY,
      </if>
      <if test="ydlWqws != null" >
        YDL_WQWS,
      </if>
      <if test="wssjclnlDR != null" >
        WSSJCLNL_D_R,
      </if>
      <if test="wssjcllWd != null" >
        WSSJCLL_WD,
      </if>
      <if test="qzClshwslWd != null" >
        QZ_CLSHWSL_WD,
      </if>
      <if test="qzClgyfslWd != null" >
        QZ_CLGYFSL_WD,
      </if>
      <if test="qzClbxqwdslWd != null" >
        QZ_CLBXQWDSL_WD,
      </if>
      <if test="zsssclWd != null" >
        ZSSSCL_WD,
      </if>
      <if test="zsslylWd != null" >
        ZSSLYL_WD,
      </if>
      <if test="qzGyyslWd != null" >
        QZ_GYYSL_WD,
      </if>
      <if test="qzSzysWd != null" >
        QZ_SZYS_WD,
      </if>
      <if test="qzJgyslWd != null" >
        QZ_JGYSL_WD,
      </if>
      <if test="wncslD != null" >
        WNCSL_D,
      </if>
      <if test="wnczlD != null" >
        WNCZL_D,
      </if>
      <if test="qzTdlylD != null" >
        QZ_TDLYL_D,
      </if>
      <if test="qzTmczlD != null" >
        QZ_TMCZL_D,
      </if>
      <if test="qzJzcllylD != null" >
        QZ_JZCLLYL_D,
      </if>
      <if test="qzFsczlD != null" >
        QZ_FSCZL_D,
      </if>
      <if test="wnqddqlD != null" >
        WNQDDQL_D,
      </if>
      <if test="wnyyxhcqlLfm != null" >
        WNYYXHCQL_LFM,
      </if>
      <if test="hxxylqclD != null" >
        HXXYLQCL_D,
      </if>
      <if test="hxxyljkndHkS != null" >
        HXXYLJKND_HK_S,
      </if>
      <if test="hxxylckndHkS != null" >
        HXXYLCKND_HK_S,
      </if>
      <if test="shxylqclD != null" >
        SHXYLQCL_D,
      </if>
      <if test="shxyljkndHkS != null" >
        SHXYLJKND_HK_S,
      </if>
      <if test="shxylckndHkS != null" >
        SHXYLCKND_HK_S,
      </if>
      <if test="xfwqclD != null" >
        XFWQCL_D,
      </if>
      <if test="xfwjkndHkS != null" >
        XFWJKND_HK_S,
      </if>
      <if test="xfwckndHkS != null" >
        XFWCKND_HK_S,
      </if>
      <if test="dzwyqclD != null" >
        DZWYQCL_D,
      </if>
      <if test="dzwyjkndHkS != null" >
        DZWYJKND_HK_S,
      </if>
      <if test="dzwyckndHkS != null" >
        DZWYCKND_HK_S,
      </if>
      <if test="sylqclD != null" >
        SYLQCL_D,
      </if>
      <if test="syljkndHkS != null" >
        SYLJKND_HK_S,
      </if>
      <if test="sylckndHkS != null" >
        SYLCKND_HK_S,
      </if>
      <if test="ylzhxjqclD != null" >
        YLZHXJQCL_D,
      </if>
      <if test="ylzhxjjkndHkS != null" >
        YLZHXJJKND_HK_S,
      </if>
      <if test="ylzhxjckndHkS != null" >
        YLZHXJCKND_HK_S,
      </if>
      <if test="adqclD != null" >
        ADQCL_D,
      </if>
      <if test="adjkndHkS != null" >
        ADJKND_HK_S,
      </if>
      <if test="adckndHkS != null" >
        ADCKND_HK_S,
      </if>
      <if test="ylqclD != null" >
        YLQCL_D,
      </if>
      <if test="yljkndHkS != null" >
        YLJKND_HK_S,
      </if>
      <if test="ylckndHkS != null" >
        YLCKND_HK_S,
      </if>
      <if test="zdqclD != null" >
        ZDQCL_D,
      </if>
      <if test="zdjkndHkS != null" >
        ZDJKND_HK_S,
      </if>
      <if test="zdckndHkS != null" >
        ZDCKND_HK_S,
      </if>
      <if test="zlqclQk != null" >
        ZLQCL_QK,
      </if>
      <if test="zljkndHkS != null" >
        ZLJKND_HK_S,
      </if>
      <if test="zlckndHkS != null" >
        ZLCKND_HK_S,
      </if>
      <if test="hffqclQk != null" >
        HFFQCL_QK,
      </if>
      <if test="hffjkndHkS != null" >
        HFFJKND_HK_S,
      </if>
      <if test="hffckndHkS != null" >
        HFFCKND_HK_S,
      </if>
      <if test="qhwqclQk != null" >
        QHWQCL_QK,
      </if>
      <if test="qhwjkndHkS != null" >
        QHWJKND_HK_S,
      </if>
      <if test="qhwckndHkS != null" >
        QHWCKND_HK_S,
      </if>
      <if test="sqclQk != null" >
        SQCL_QK,
      </if>
      <if test="sjkndHkS != null" >
        SJKND_HK_S,
      </if>
      <if test="sckndHkS != null" >
        SCKND_HK_S,
      </if>
      <if test="qqclQk != null" >
        QQCL_QK,
      </if>
      <if test="qjkndHkS != null" >
        QJKND_HK_S,
      </if>
      <if test="qckndHkS != null" >
        QCKND_HK_S,
      </if>
      <if test="gqclQk != null" >
        GQCL_QK,
      </if>
      <if test="gjkndHkS != null" >
        GJKND_HK_S,
      </if>
      <if test="gckndHkS != null" >
        GCKND_HK_S,
      </if>
      <if test="gqclQkDup1 != null" >
        GQCL_QK_dup1,
      </if>
      <if test="gjkndWkS != null" >
        GJKND_WK_S,
      </if>
      <if test="gckndWkS != null" >
        GCKND_WK_S,
      </if>
      <if test="zgqclQk != null" >
        ZGQCL_QK,
      </if>
      <if test="zgjkndHkS != null" >
        ZGJKND_HK_S,
      </if>
      <if test="zgckndHkS != null" >
        ZGCKND_HK_S,
      </if>
      <if test="ljgqclQk != null" >
        LJGQCL_QK,
      </if>
      <if test="ljgjkndHkS != null" >
        LJGJKND_HK_S,
      </if>
      <if test="ljgckndHkS != null" >
        LJGCKND_HK_S,
      </if>
      <if test="gyClslWdR != null" >
        GY_CLSL_WD_R,
      </if>
      <if test="gyXzclslWdR != null" >
        GY_XZCLSL_WD_R,
      </if>
      <if test="gyYxtsT != null" >
        GY_YXTS_T,
      </if>
      <if test="gyCodjkndHkS != null" >
        GY_CODJKND_HK_S,
      </if>
      <if test="gyCodckndHkS != null" >
        GY_CODCKND_HK_S,
      </if>
      <if test="gyAdjkndHkS != null" >
        GY_ADJKND_HK_S,
      </if>
      <if test="gyAdckndHkS != null" >
        GY_ADCKND_HK_S,
      </if>
      <if test="shClslWdR != null" >
        SH_CLSL_WD_R,
      </if>
      <if test="shXzclslWdR != null" >
        SH_XZCLSL_WD_R,
      </if>
      <if test="shCodjkndHkS != null" >
        SH_CODJKND_HK_S,
      </if>
      <if test="shCodckndHkS != null" >
        SH_CODCKND_HK_S,
      </if>
      <if test="shAdjkndHkS != null" >
        SH_ADJKND_HK_S,
      </if>
      <if test="shAdckndHkS != null" >
        SH_ADCKND_HK_S,
      </if>
      <if test="hdxzshcodqclD != null" >
        HDXZSHCODQCL_D,
      </if>
      <if test="hdxzshadqclD != null" >
        HDXZSHADQCL_D,
      </if>
      <if test="jytlcM != null" >
        JYTLC_M,
      </if>
      <if test="bz != null" >
        BZ,
      </if>
      <if test="isDel != null" >
        is_del,
      </if>
      <if test="pollBl1 != null" >
        poll_bl1,
      </if>
      <if test="pollBl2 != null" >
        poll_bl2,
      </if>
      <if test="pollBl3 != null" >
        poll_bl3,
      </if>
      <if test="pollBl4 != null" >
        poll_bl4,
      </if>
      <if test="pollBl5 != null" >
        poll_bl5,
      </if>
      <if test="pollBl6 != null" >
        poll_bl6,
      </if>
      <if test="pollBl7 != null" >
        poll_bl7,
      </if>
      <if test="pollBl8 != null" >
        poll_bl8,
      </if>
      <if test="pollBl9 != null" >
        poll_bl9,
      </if>
      <if test="pollBl10 != null" >
        poll_bl10,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tjnf != null" >
        #{tjnf,jdbcType=INTEGER},
      </if>
      <if test="xzqhdm != null" >
        #{xzqhdm,jdbcType=VARCHAR},
      </if>
      <if test="xzqhmc != null" >
        #{xzqhmc,jdbcType=VARCHAR},
      </if>
      <if test="shxydm != null" >
        #{shxydm,jdbcType=VARCHAR},
      </if>
      <if test="zzjgdm != null" >
        #{zzjgdm,jdbcType=VARCHAR},
      </if>
      <if test="dwmcGz != null" >
        #{dwmcGz,jdbcType=VARCHAR},
      </if>
      <if test="ssdm != null" >
        #{ssdm,jdbcType=VARCHAR},
      </if>
      <if test="sskzdy != null" >
        #{sskzdy,jdbcType=VARCHAR},
      </if>
      <if test="yydwmc != null" >
        #{yydwmc,jdbcType=VARCHAR},
      </if>
      <if test="fddbr != null" >
        #{fddbr,jdbcType=VARCHAR},
      </if>
      <if test="qyxxdzSZzqZxs != null" >
        #{qyxxdzSZzqZxs,jdbcType=VARCHAR},
      </if>
      <if test="qyxxdzDqSZM != null" >
        #{qyxxdzDqSZM,jdbcType=VARCHAR},
      </if>
      <if test="qyxxdzXQSQ != null" >
        #{qyxxdzXQSQ,jdbcType=VARCHAR},
      </if>
      <if test="qyxxdzXZ != null" >
        #{qyxxdzXZ,jdbcType=VARCHAR},
      </if>
      <if test="qyxxdzJCMph != null" >
        #{qyxxdzJCMph,jdbcType=VARCHAR},
      </if>
      <if test="zxjdD != null" >
        #{zxjdD,jdbcType=INTEGER},
      </if>
      <if test="zxjdF != null" >
        #{zxjdF,jdbcType=INTEGER},
      </if>
      <if test="zxjdM != null" >
        #{zxjdM,jdbcType=INTEGER},
      </if>
      <if test="jd != null" >
        #{jd,jdbcType=DOUBLE},
      </if>
      <if test="zxwdD != null" >
        #{zxwdD,jdbcType=INTEGER},
      </if>
      <if test="zxwdF != null" >
        #{zxwdF,jdbcType=INTEGER},
      </if>
      <if test="zxwdM != null" >
        #{zxwdM,jdbcType=INTEGER},
      </if>
      <if test="wd != null" >
        #{wd,jdbcType=DOUBLE},
      </if>
      <if test="lxfsdhhm != null" >
        #{lxfsdhhm,jdbcType=VARCHAR},
      </if>
      <if test="lxfslxr != null" >
        #{lxfslxr,jdbcType=VARCHAR},
      </if>
      <if test="lxfsczhm != null" >
        #{lxfsczhm,jdbcType=VARCHAR},
      </if>
      <if test="lxfsyzbm != null" >
        #{lxfsyzbm,jdbcType=VARCHAR},
      </if>
      <if test="wsclsslx != null" >
        #{wsclsslx,jdbcType=VARCHAR},
      </if>
      <if test="wsclcsmc != null" >
        #{wsclcsmc,jdbcType=VARCHAR},
      </if>
      <if test="jcsj != null" >
        #{jcsj,jdbcType=INTEGER},
      </if>
      <if test="wscljb != null" >
        #{wscljb,jdbcType=VARCHAR},
      </if>
      <if test="wsclffmc1 != null" >
        #{wsclffmc1,jdbcType=VARCHAR},
      </if>
      <if test="wsclffdm1 != null" >
        #{wsclffdm1,jdbcType=VARCHAR},
      </if>
      <if test="wsclffmc2 != null" >
        #{wsclffmc2,jdbcType=VARCHAR},
      </if>
      <if test="wsclffdm2 != null" >
        #{wsclffdm2,jdbcType=VARCHAR},
      </if>
      <if test="wsclffmc3 != null" >
        #{wsclffmc3,jdbcType=VARCHAR},
      </if>
      <if test="wsclffdm3 != null" >
        #{wsclffdm3,jdbcType=VARCHAR},
      </if>
      <if test="psqxlxmc != null" >
        #{psqxlxmc,jdbcType=VARCHAR},
      </if>
      <if test="psqxlxdm != null" >
        #{psqxlxdm,jdbcType=VARCHAR},
      </if>
      <if test="snstmc != null" >
        #{snstmc,jdbcType=VARCHAR},
      </if>
      <if test="snstdm != null" >
        #{snstdm,jdbcType=VARCHAR},
      </if>
      <if test="wnyyxhzz != null" >
        #{wnyyxhzz,jdbcType=VARCHAR},
      </if>
      <if test="wnyyxhzzmc != null" >
        #{wnyyxhzzmc,jdbcType=VARCHAR},
      </if>
      <if test="zxpfbz != null" >
        #{zxpfbz,jdbcType=VARCHAR},
      </if>
      <if test="zxpfbzmc != null" >
        #{zxpfbzmc,jdbcType=VARCHAR},
      </if>
      <if test="zxpfbzxzjb != null" >
        #{zxpfbzxzjb,jdbcType=VARCHAR},
      </if>
      <if test="zxpfbzxzjbmc != null" >
        #{zxpfbzxzjbmc,jdbcType=VARCHAR},
      </if>
      <if test="yxtsT != null" >
        #{yxtsT,jdbcType=INTEGER},
      </if>
      <if test="ljwctzWy != null" >
        #{ljwctzWy,jdbcType=DOUBLE},
      </if>
      <if test="xzgdzctzWy != null" >
        #{xzgdzctzWy,jdbcType=DOUBLE},
      </if>
      <if test="yxfyWy != null" >
        #{yxfyWy,jdbcType=DOUBLE},
      </if>
      <if test="ydlWqws != null" >
        #{ydlWqws,jdbcType=DECIMAL},
      </if>
      <if test="wssjclnlDR != null" >
        #{wssjclnlDR,jdbcType=DOUBLE},
      </if>
      <if test="wssjcllWd != null" >
        #{wssjcllWd,jdbcType=DOUBLE},
      </if>
      <if test="qzClshwslWd != null" >
        #{qzClshwslWd,jdbcType=DOUBLE},
      </if>
      <if test="qzClgyfslWd != null" >
        #{qzClgyfslWd,jdbcType=DOUBLE},
      </if>
      <if test="qzClbxqwdslWd != null" >
        #{qzClbxqwdslWd,jdbcType=DOUBLE},
      </if>
      <if test="zsssclWd != null" >
        #{zsssclWd,jdbcType=DOUBLE},
      </if>
      <if test="zsslylWd != null" >
        #{zsslylWd,jdbcType=DOUBLE},
      </if>
      <if test="qzGyyslWd != null" >
        #{qzGyyslWd,jdbcType=DOUBLE},
      </if>
      <if test="qzSzysWd != null" >
        #{qzSzysWd,jdbcType=DOUBLE},
      </if>
      <if test="qzJgyslWd != null" >
        #{qzJgyslWd,jdbcType=DOUBLE},
      </if>
      <if test="wncslD != null" >
        #{wncslD,jdbcType=DOUBLE},
      </if>
      <if test="wnczlD != null" >
        #{wnczlD,jdbcType=DOUBLE},
      </if>
      <if test="qzTdlylD != null" >
        #{qzTdlylD,jdbcType=DOUBLE},
      </if>
      <if test="qzTmczlD != null" >
        #{qzTmczlD,jdbcType=DOUBLE},
      </if>
      <if test="qzJzcllylD != null" >
        #{qzJzcllylD,jdbcType=DOUBLE},
      </if>
      <if test="qzFsczlD != null" >
        #{qzFsczlD,jdbcType=DOUBLE},
      </if>
      <if test="wnqddqlD != null" >
        #{wnqddqlD,jdbcType=DOUBLE},
      </if>
      <if test="wnyyxhcqlLfm != null" >
        #{wnyyxhcqlLfm,jdbcType=DOUBLE},
      </if>
      <if test="hxxylqclD != null" >
        #{hxxylqclD,jdbcType=DOUBLE},
      </if>
      <if test="hxxyljkndHkS != null" >
        #{hxxyljkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="hxxylckndHkS != null" >
        #{hxxylckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="shxylqclD != null" >
        #{shxylqclD,jdbcType=DOUBLE},
      </if>
      <if test="shxyljkndHkS != null" >
        #{shxyljkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="shxylckndHkS != null" >
        #{shxylckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="xfwqclD != null" >
        #{xfwqclD,jdbcType=DOUBLE},
      </if>
      <if test="xfwjkndHkS != null" >
        #{xfwjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="xfwckndHkS != null" >
        #{xfwckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="dzwyqclD != null" >
        #{dzwyqclD,jdbcType=DOUBLE},
      </if>
      <if test="dzwyjkndHkS != null" >
        #{dzwyjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="dzwyckndHkS != null" >
        #{dzwyckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="sylqclD != null" >
        #{sylqclD,jdbcType=DOUBLE},
      </if>
      <if test="syljkndHkS != null" >
        #{syljkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="sylckndHkS != null" >
        #{sylckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="ylzhxjqclD != null" >
        #{ylzhxjqclD,jdbcType=DOUBLE},
      </if>
      <if test="ylzhxjjkndHkS != null" >
        #{ylzhxjjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="ylzhxjckndHkS != null" >
        #{ylzhxjckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="adqclD != null" >
        #{adqclD,jdbcType=DOUBLE},
      </if>
      <if test="adjkndHkS != null" >
        #{adjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="adckndHkS != null" >
        #{adckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="ylqclD != null" >
        #{ylqclD,jdbcType=DOUBLE},
      </if>
      <if test="yljkndHkS != null" >
        #{yljkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="ylckndHkS != null" >
        #{ylckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="zdqclD != null" >
        #{zdqclD,jdbcType=DOUBLE},
      </if>
      <if test="zdjkndHkS != null" >
        #{zdjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="zdckndHkS != null" >
        #{zdckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="zlqclQk != null" >
        #{zlqclQk,jdbcType=DOUBLE},
      </if>
      <if test="zljkndHkS != null" >
        #{zljkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="zlckndHkS != null" >
        #{zlckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="hffqclQk != null" >
        #{hffqclQk,jdbcType=DOUBLE},
      </if>
      <if test="hffjkndHkS != null" >
        #{hffjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="hffckndHkS != null" >
        #{hffckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="qhwqclQk != null" >
        #{qhwqclQk,jdbcType=DOUBLE},
      </if>
      <if test="qhwjkndHkS != null" >
        #{qhwjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="qhwckndHkS != null" >
        #{qhwckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="sqclQk != null" >
        #{sqclQk,jdbcType=DOUBLE},
      </if>
      <if test="sjkndHkS != null" >
        #{sjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="sckndHkS != null" >
        #{sckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="qqclQk != null" >
        #{qqclQk,jdbcType=DOUBLE},
      </if>
      <if test="qjkndHkS != null" >
        #{qjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="qckndHkS != null" >
        #{qckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="gqclQk != null" >
        #{gqclQk,jdbcType=DOUBLE},
      </if>
      <if test="gjkndHkS != null" >
        #{gjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="gckndHkS != null" >
        #{gckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="gqclQkDup1 != null" >
        #{gqclQkDup1,jdbcType=DOUBLE},
      </if>
      <if test="gjkndWkS != null" >
        #{gjkndWkS,jdbcType=DOUBLE},
      </if>
      <if test="gckndWkS != null" >
        #{gckndWkS,jdbcType=DOUBLE},
      </if>
      <if test="zgqclQk != null" >
        #{zgqclQk,jdbcType=DOUBLE},
      </if>
      <if test="zgjkndHkS != null" >
        #{zgjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="zgckndHkS != null" >
        #{zgckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="ljgqclQk != null" >
        #{ljgqclQk,jdbcType=DOUBLE},
      </if>
      <if test="ljgjkndHkS != null" >
        #{ljgjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="ljgckndHkS != null" >
        #{ljgckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="gyClslWdR != null" >
        #{gyClslWdR,jdbcType=DOUBLE},
      </if>
      <if test="gyXzclslWdR != null" >
        #{gyXzclslWdR,jdbcType=DOUBLE},
      </if>
      <if test="gyYxtsT != null" >
        #{gyYxtsT,jdbcType=DOUBLE},
      </if>
      <if test="gyCodjkndHkS != null" >
        #{gyCodjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="gyCodckndHkS != null" >
        #{gyCodckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="gyAdjkndHkS != null" >
        #{gyAdjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="gyAdckndHkS != null" >
        #{gyAdckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="shClslWdR != null" >
        #{shClslWdR,jdbcType=DOUBLE},
      </if>
      <if test="shXzclslWdR != null" >
        #{shXzclslWdR,jdbcType=DOUBLE},
      </if>
      <if test="shCodjkndHkS != null" >
        #{shCodjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="shCodckndHkS != null" >
        #{shCodckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="shAdjkndHkS != null" >
        #{shAdjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="shAdckndHkS != null" >
        #{shAdckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="hdxzshcodqclD != null" >
        #{hdxzshcodqclD,jdbcType=DOUBLE},
      </if>
      <if test="hdxzshadqclD != null" >
        #{hdxzshadqclD,jdbcType=DOUBLE},
      </if>
      <if test="jytlcM != null" >
        #{jytlcM,jdbcType=DOUBLE},
      </if>
      <if test="bz != null" >
        #{bz,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="pollBl1 != null" >
        #{pollBl1,jdbcType=VARCHAR},
      </if>
      <if test="pollBl2 != null" >
        #{pollBl2,jdbcType=VARCHAR},
      </if>
      <if test="pollBl3 != null" >
        #{pollBl3,jdbcType=VARCHAR},
      </if>
      <if test="pollBl4 != null" >
        #{pollBl4,jdbcType=VARCHAR},
      </if>
      <if test="pollBl5 != null" >
        #{pollBl5,jdbcType=VARCHAR},
      </if>
      <if test="pollBl6 != null" >
        #{pollBl6,jdbcType=VARCHAR},
      </if>
      <if test="pollBl7 != null" >
        #{pollBl7,jdbcType=VARCHAR},
      </if>
      <if test="pollBl8 != null" >
        #{pollBl8,jdbcType=VARCHAR},
      </if>
      <if test="pollBl9 != null" >
        #{pollBl9,jdbcType=VARCHAR},
      </if>
      <if test="pollBl10 != null" >
        #{pollBl10,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.eliteams.quick4j.web.model.PollFactoryExample" resultType="java.lang.Long">
    select count(*) from poll_factory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update poll_factory
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tjnf != null" >
        TJNF = #{record.tjnf,jdbcType=INTEGER},
      </if>
      <if test="record.xzqhdm != null" >
        XZQHDM = #{record.xzqhdm,jdbcType=VARCHAR},
      </if>
      <if test="record.xzqhmc != null" >
        XZQHMC = #{record.xzqhmc,jdbcType=VARCHAR},
      </if>
      <if test="record.shxydm != null" >
        SHXYDM = #{record.shxydm,jdbcType=VARCHAR},
      </if>
      <if test="record.zzjgdm != null" >
        ZZJGDM = #{record.zzjgdm,jdbcType=VARCHAR},
      </if>
      <if test="record.dwmcGz != null" >
        DWMC_GZ = #{record.dwmcGz,jdbcType=VARCHAR},
      </if>
      <if test="record.ssdm != null" >
        SSDM = #{record.ssdm,jdbcType=VARCHAR},
      </if>
      <if test="record.sskzdy != null" >
        SSKZDY = #{record.sskzdy,jdbcType=VARCHAR},
      </if>
      <if test="record.yydwmc != null" >
        YYDWMC = #{record.yydwmc,jdbcType=VARCHAR},
      </if>
      <if test="record.fddbr != null" >
        FDDBR = #{record.fddbr,jdbcType=VARCHAR},
      </if>
      <if test="record.qyxxdzSZzqZxs != null" >
        QYXXDZ_S_ZZQ_ZXS = #{record.qyxxdzSZzqZxs,jdbcType=VARCHAR},
      </if>
      <if test="record.qyxxdzDqSZM != null" >
        QYXXDZ_DQ_S_Z_M = #{record.qyxxdzDqSZM,jdbcType=VARCHAR},
      </if>
      <if test="record.qyxxdzXQSQ != null" >
        QYXXDZ_X_Q_S_Q = #{record.qyxxdzXQSQ,jdbcType=VARCHAR},
      </if>
      <if test="record.qyxxdzXZ != null" >
        QYXXDZ_X_Z = #{record.qyxxdzXZ,jdbcType=VARCHAR},
      </if>
      <if test="record.qyxxdzJCMph != null" >
        QYXXDZ_J_C_MPH = #{record.qyxxdzJCMph,jdbcType=VARCHAR},
      </if>
      <if test="record.zxjdD != null" >
        ZXJD_D = #{record.zxjdD,jdbcType=INTEGER},
      </if>
      <if test="record.zxjdF != null" >
        ZXJD_F = #{record.zxjdF,jdbcType=INTEGER},
      </if>
      <if test="record.zxjdM != null" >
        ZXJD_M = #{record.zxjdM,jdbcType=INTEGER},
      </if>
      <if test="record.jd != null" >
        JD = #{record.jd,jdbcType=DOUBLE},
      </if>
      <if test="record.zxwdD != null" >
        ZXWD_D = #{record.zxwdD,jdbcType=INTEGER},
      </if>
      <if test="record.zxwdF != null" >
        ZXWD_F = #{record.zxwdF,jdbcType=INTEGER},
      </if>
      <if test="record.zxwdM != null" >
        ZXWD_M = #{record.zxwdM,jdbcType=INTEGER},
      </if>
      <if test="record.wd != null" >
        WD = #{record.wd,jdbcType=DOUBLE},
      </if>
      <if test="record.lxfsdhhm != null" >
        LXFSDHHM = #{record.lxfsdhhm,jdbcType=VARCHAR},
      </if>
      <if test="record.lxfslxr != null" >
        LXFSLXR = #{record.lxfslxr,jdbcType=VARCHAR},
      </if>
      <if test="record.lxfsczhm != null" >
        LXFSCZHM = #{record.lxfsczhm,jdbcType=VARCHAR},
      </if>
      <if test="record.lxfsyzbm != null" >
        LXFSYZBM = #{record.lxfsyzbm,jdbcType=VARCHAR},
      </if>
      <if test="record.wsclsslx != null" >
        WSCLSSLX = #{record.wsclsslx,jdbcType=VARCHAR},
      </if>
      <if test="record.wsclcsmc != null" >
        WSCLCSMC = #{record.wsclcsmc,jdbcType=VARCHAR},
      </if>
      <if test="record.jcsj != null" >
        JCSJ = #{record.jcsj,jdbcType=INTEGER},
      </if>
      <if test="record.wscljb != null" >
        WSCLJB = #{record.wscljb,jdbcType=VARCHAR},
      </if>
      <if test="record.wsclffmc1 != null" >
        WSCLFFMC1 = #{record.wsclffmc1,jdbcType=VARCHAR},
      </if>
      <if test="record.wsclffdm1 != null" >
        WSCLFFDM1 = #{record.wsclffdm1,jdbcType=VARCHAR},
      </if>
      <if test="record.wsclffmc2 != null" >
        WSCLFFMC2 = #{record.wsclffmc2,jdbcType=VARCHAR},
      </if>
      <if test="record.wsclffdm2 != null" >
        WSCLFFDM2 = #{record.wsclffdm2,jdbcType=VARCHAR},
      </if>
      <if test="record.wsclffmc3 != null" >
        WSCLFFMC3 = #{record.wsclffmc3,jdbcType=VARCHAR},
      </if>
      <if test="record.wsclffdm3 != null" >
        WSCLFFDM3 = #{record.wsclffdm3,jdbcType=VARCHAR},
      </if>
      <if test="record.psqxlxmc != null" >
        PSQXLXMC = #{record.psqxlxmc,jdbcType=VARCHAR},
      </if>
      <if test="record.psqxlxdm != null" >
        PSQXLXDM = #{record.psqxlxdm,jdbcType=VARCHAR},
      </if>
      <if test="record.snstmc != null" >
        SNSTMC = #{record.snstmc,jdbcType=VARCHAR},
      </if>
      <if test="record.snstdm != null" >
        SNSTDM = #{record.snstdm,jdbcType=VARCHAR},
      </if>
      <if test="record.wnyyxhzz != null" >
        WNYYXHZZ = #{record.wnyyxhzz,jdbcType=VARCHAR},
      </if>
      <if test="record.wnyyxhzzmc != null" >
        WNYYXHZZMC = #{record.wnyyxhzzmc,jdbcType=VARCHAR},
      </if>
      <if test="record.zxpfbz != null" >
        ZXPFBZ = #{record.zxpfbz,jdbcType=VARCHAR},
      </if>
      <if test="record.zxpfbzmc != null" >
        ZXPFBZMC = #{record.zxpfbzmc,jdbcType=VARCHAR},
      </if>
      <if test="record.zxpfbzxzjb != null" >
        ZXPFBZXZJB = #{record.zxpfbzxzjb,jdbcType=VARCHAR},
      </if>
      <if test="record.zxpfbzxzjbmc != null" >
        ZXPFBZXZJBMC = #{record.zxpfbzxzjbmc,jdbcType=VARCHAR},
      </if>
      <if test="record.yxtsT != null" >
        YXTS_T = #{record.yxtsT,jdbcType=INTEGER},
      </if>
      <if test="record.ljwctzWy != null" >
        LJWCTZ_WY = #{record.ljwctzWy,jdbcType=DOUBLE},
      </if>
      <if test="record.xzgdzctzWy != null" >
        XZGDZCTZ_WY = #{record.xzgdzctzWy,jdbcType=DOUBLE},
      </if>
      <if test="record.yxfyWy != null" >
        YXFY_WY = #{record.yxfyWy,jdbcType=DOUBLE},
      </if>
      <if test="record.ydlWqws != null" >
        YDL_WQWS = #{record.ydlWqws,jdbcType=DECIMAL},
      </if>
      <if test="record.wssjclnlDR != null" >
        WSSJCLNL_D_R = #{record.wssjclnlDR,jdbcType=DOUBLE},
      </if>
      <if test="record.wssjcllWd != null" >
        WSSJCLL_WD = #{record.wssjcllWd,jdbcType=DOUBLE},
      </if>
      <if test="record.qzClshwslWd != null" >
        QZ_CLSHWSL_WD = #{record.qzClshwslWd,jdbcType=DOUBLE},
      </if>
      <if test="record.qzClgyfslWd != null" >
        QZ_CLGYFSL_WD = #{record.qzClgyfslWd,jdbcType=DOUBLE},
      </if>
      <if test="record.qzClbxqwdslWd != null" >
        QZ_CLBXQWDSL_WD = #{record.qzClbxqwdslWd,jdbcType=DOUBLE},
      </if>
      <if test="record.zsssclWd != null" >
        ZSSSCL_WD = #{record.zsssclWd,jdbcType=DOUBLE},
      </if>
      <if test="record.zsslylWd != null" >
        ZSSLYL_WD = #{record.zsslylWd,jdbcType=DOUBLE},
      </if>
      <if test="record.qzGyyslWd != null" >
        QZ_GYYSL_WD = #{record.qzGyyslWd,jdbcType=DOUBLE},
      </if>
      <if test="record.qzSzysWd != null" >
        QZ_SZYS_WD = #{record.qzSzysWd,jdbcType=DOUBLE},
      </if>
      <if test="record.qzJgyslWd != null" >
        QZ_JGYSL_WD = #{record.qzJgyslWd,jdbcType=DOUBLE},
      </if>
      <if test="record.wncslD != null" >
        WNCSL_D = #{record.wncslD,jdbcType=DOUBLE},
      </if>
      <if test="record.wnczlD != null" >
        WNCZL_D = #{record.wnczlD,jdbcType=DOUBLE},
      </if>
      <if test="record.qzTdlylD != null" >
        QZ_TDLYL_D = #{record.qzTdlylD,jdbcType=DOUBLE},
      </if>
      <if test="record.qzTmczlD != null" >
        QZ_TMCZL_D = #{record.qzTmczlD,jdbcType=DOUBLE},
      </if>
      <if test="record.qzJzcllylD != null" >
        QZ_JZCLLYL_D = #{record.qzJzcllylD,jdbcType=DOUBLE},
      </if>
      <if test="record.qzFsczlD != null" >
        QZ_FSCZL_D = #{record.qzFsczlD,jdbcType=DOUBLE},
      </if>
      <if test="record.wnqddqlD != null" >
        WNQDDQL_D = #{record.wnqddqlD,jdbcType=DOUBLE},
      </if>
      <if test="record.wnyyxhcqlLfm != null" >
        WNYYXHCQL_LFM = #{record.wnyyxhcqlLfm,jdbcType=DOUBLE},
      </if>
      <if test="record.hxxylqclD != null" >
        HXXYLQCL_D = #{record.hxxylqclD,jdbcType=DOUBLE},
      </if>
      <if test="record.hxxyljkndHkS != null" >
        HXXYLJKND_HK_S = #{record.hxxyljkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.hxxylckndHkS != null" >
        HXXYLCKND_HK_S = #{record.hxxylckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.shxylqclD != null" >
        SHXYLQCL_D = #{record.shxylqclD,jdbcType=DOUBLE},
      </if>
      <if test="record.shxyljkndHkS != null" >
        SHXYLJKND_HK_S = #{record.shxyljkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.shxylckndHkS != null" >
        SHXYLCKND_HK_S = #{record.shxylckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.xfwqclD != null" >
        XFWQCL_D = #{record.xfwqclD,jdbcType=DOUBLE},
      </if>
      <if test="record.xfwjkndHkS != null" >
        XFWJKND_HK_S = #{record.xfwjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.xfwckndHkS != null" >
        XFWCKND_HK_S = #{record.xfwckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.dzwyqclD != null" >
        DZWYQCL_D = #{record.dzwyqclD,jdbcType=DOUBLE},
      </if>
      <if test="record.dzwyjkndHkS != null" >
        DZWYJKND_HK_S = #{record.dzwyjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.dzwyckndHkS != null" >
        DZWYCKND_HK_S = #{record.dzwyckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.sylqclD != null" >
        SYLQCL_D = #{record.sylqclD,jdbcType=DOUBLE},
      </if>
      <if test="record.syljkndHkS != null" >
        SYLJKND_HK_S = #{record.syljkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.sylckndHkS != null" >
        SYLCKND_HK_S = #{record.sylckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.ylzhxjqclD != null" >
        YLZHXJQCL_D = #{record.ylzhxjqclD,jdbcType=DOUBLE},
      </if>
      <if test="record.ylzhxjjkndHkS != null" >
        YLZHXJJKND_HK_S = #{record.ylzhxjjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.ylzhxjckndHkS != null" >
        YLZHXJCKND_HK_S = #{record.ylzhxjckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.adqclD != null" >
        ADQCL_D = #{record.adqclD,jdbcType=DOUBLE},
      </if>
      <if test="record.adjkndHkS != null" >
        ADJKND_HK_S = #{record.adjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.adckndHkS != null" >
        ADCKND_HK_S = #{record.adckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.ylqclD != null" >
        YLQCL_D = #{record.ylqclD,jdbcType=DOUBLE},
      </if>
      <if test="record.yljkndHkS != null" >
        YLJKND_HK_S = #{record.yljkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.ylckndHkS != null" >
        YLCKND_HK_S = #{record.ylckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.zdqclD != null" >
        ZDQCL_D = #{record.zdqclD,jdbcType=DOUBLE},
      </if>
      <if test="record.zdjkndHkS != null" >
        ZDJKND_HK_S = #{record.zdjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.zdckndHkS != null" >
        ZDCKND_HK_S = #{record.zdckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.zlqclQk != null" >
        ZLQCL_QK = #{record.zlqclQk,jdbcType=DOUBLE},
      </if>
      <if test="record.zljkndHkS != null" >
        ZLJKND_HK_S = #{record.zljkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.zlckndHkS != null" >
        ZLCKND_HK_S = #{record.zlckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.hffqclQk != null" >
        HFFQCL_QK = #{record.hffqclQk,jdbcType=DOUBLE},
      </if>
      <if test="record.hffjkndHkS != null" >
        HFFJKND_HK_S = #{record.hffjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.hffckndHkS != null" >
        HFFCKND_HK_S = #{record.hffckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.qhwqclQk != null" >
        QHWQCL_QK = #{record.qhwqclQk,jdbcType=DOUBLE},
      </if>
      <if test="record.qhwjkndHkS != null" >
        QHWJKND_HK_S = #{record.qhwjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.qhwckndHkS != null" >
        QHWCKND_HK_S = #{record.qhwckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.sqclQk != null" >
        SQCL_QK = #{record.sqclQk,jdbcType=DOUBLE},
      </if>
      <if test="record.sjkndHkS != null" >
        SJKND_HK_S = #{record.sjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.sckndHkS != null" >
        SCKND_HK_S = #{record.sckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.qqclQk != null" >
        QQCL_QK = #{record.qqclQk,jdbcType=DOUBLE},
      </if>
      <if test="record.qjkndHkS != null" >
        QJKND_HK_S = #{record.qjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.qckndHkS != null" >
        QCKND_HK_S = #{record.qckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.gqclQk != null" >
        GQCL_QK = #{record.gqclQk,jdbcType=DOUBLE},
      </if>
      <if test="record.gjkndHkS != null" >
        GJKND_HK_S = #{record.gjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.gckndHkS != null" >
        GCKND_HK_S = #{record.gckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.gqclQkDup1 != null" >
        GQCL_QK_dup1 = #{record.gqclQkDup1,jdbcType=DOUBLE},
      </if>
      <if test="record.gjkndWkS != null" >
        GJKND_WK_S = #{record.gjkndWkS,jdbcType=DOUBLE},
      </if>
      <if test="record.gckndWkS != null" >
        GCKND_WK_S = #{record.gckndWkS,jdbcType=DOUBLE},
      </if>
      <if test="record.zgqclQk != null" >
        ZGQCL_QK = #{record.zgqclQk,jdbcType=DOUBLE},
      </if>
      <if test="record.zgjkndHkS != null" >
        ZGJKND_HK_S = #{record.zgjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.zgckndHkS != null" >
        ZGCKND_HK_S = #{record.zgckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.ljgqclQk != null" >
        LJGQCL_QK = #{record.ljgqclQk,jdbcType=DOUBLE},
      </if>
      <if test="record.ljgjkndHkS != null" >
        LJGJKND_HK_S = #{record.ljgjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.ljgckndHkS != null" >
        LJGCKND_HK_S = #{record.ljgckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.gyClslWdR != null" >
        GY_CLSL_WD_R = #{record.gyClslWdR,jdbcType=DOUBLE},
      </if>
      <if test="record.gyXzclslWdR != null" >
        GY_XZCLSL_WD_R = #{record.gyXzclslWdR,jdbcType=DOUBLE},
      </if>
      <if test="record.gyYxtsT != null" >
        GY_YXTS_T = #{record.gyYxtsT,jdbcType=DOUBLE},
      </if>
      <if test="record.gyCodjkndHkS != null" >
        GY_CODJKND_HK_S = #{record.gyCodjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.gyCodckndHkS != null" >
        GY_CODCKND_HK_S = #{record.gyCodckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.gyAdjkndHkS != null" >
        GY_ADJKND_HK_S = #{record.gyAdjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.gyAdckndHkS != null" >
        GY_ADCKND_HK_S = #{record.gyAdckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.shClslWdR != null" >
        SH_CLSL_WD_R = #{record.shClslWdR,jdbcType=DOUBLE},
      </if>
      <if test="record.shXzclslWdR != null" >
        SH_XZCLSL_WD_R = #{record.shXzclslWdR,jdbcType=DOUBLE},
      </if>
      <if test="record.shCodjkndHkS != null" >
        SH_CODJKND_HK_S = #{record.shCodjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.shCodckndHkS != null" >
        SH_CODCKND_HK_S = #{record.shCodckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.shAdjkndHkS != null" >
        SH_ADJKND_HK_S = #{record.shAdjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.shAdckndHkS != null" >
        SH_ADCKND_HK_S = #{record.shAdckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="record.hdxzshcodqclD != null" >
        HDXZSHCODQCL_D = #{record.hdxzshcodqclD,jdbcType=DOUBLE},
      </if>
      <if test="record.hdxzshadqclD != null" >
        HDXZSHADQCL_D = #{record.hdxzshadqclD,jdbcType=DOUBLE},
      </if>
      <if test="record.jytlcM != null" >
        JYTLC_M = #{record.jytlcM,jdbcType=DOUBLE},
      </if>
      <if test="record.bz != null" >
        BZ = #{record.bz,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null" >
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.pollBl1 != null" >
        poll_bl1 = #{record.pollBl1,jdbcType=VARCHAR},
      </if>
      <if test="record.pollBl2 != null" >
        poll_bl2 = #{record.pollBl2,jdbcType=VARCHAR},
      </if>
      <if test="record.pollBl3 != null" >
        poll_bl3 = #{record.pollBl3,jdbcType=VARCHAR},
      </if>
      <if test="record.pollBl4 != null" >
        poll_bl4 = #{record.pollBl4,jdbcType=VARCHAR},
      </if>
      <if test="record.pollBl5 != null" >
        poll_bl5 = #{record.pollBl5,jdbcType=VARCHAR},
      </if>
      <if test="record.pollBl6 != null" >
        poll_bl6 = #{record.pollBl6,jdbcType=VARCHAR},
      </if>
      <if test="record.pollBl7 != null" >
        poll_bl7 = #{record.pollBl7,jdbcType=VARCHAR},
      </if>
      <if test="record.pollBl8 != null" >
        poll_bl8 = #{record.pollBl8,jdbcType=VARCHAR},
      </if>
      <if test="record.pollBl9 != null" >
        poll_bl9 = #{record.pollBl9,jdbcType=VARCHAR},
      </if>
      <if test="record.pollBl10 != null" >
        poll_bl10 = #{record.pollBl10,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update poll_factory
    set id = #{record.id,jdbcType=INTEGER},
    TJNF = #{record.tjnf,jdbcType=INTEGER},
    XZQHDM = #{record.xzqhdm,jdbcType=VARCHAR},
    XZQHMC = #{record.xzqhmc,jdbcType=VARCHAR},
    SHXYDM = #{record.shxydm,jdbcType=VARCHAR},
    ZZJGDM = #{record.zzjgdm,jdbcType=VARCHAR},
    DWMC_GZ = #{record.dwmcGz,jdbcType=VARCHAR},
    SSDM = #{record.ssdm,jdbcType=VARCHAR},
    SSKZDY = #{record.sskzdy,jdbcType=VARCHAR},
    YYDWMC = #{record.yydwmc,jdbcType=VARCHAR},
    FDDBR = #{record.fddbr,jdbcType=VARCHAR},
    QYXXDZ_S_ZZQ_ZXS = #{record.qyxxdzSZzqZxs,jdbcType=VARCHAR},
    QYXXDZ_DQ_S_Z_M = #{record.qyxxdzDqSZM,jdbcType=VARCHAR},
    QYXXDZ_X_Q_S_Q = #{record.qyxxdzXQSQ,jdbcType=VARCHAR},
    QYXXDZ_X_Z = #{record.qyxxdzXZ,jdbcType=VARCHAR},
    QYXXDZ_J_C_MPH = #{record.qyxxdzJCMph,jdbcType=VARCHAR},
    ZXJD_D = #{record.zxjdD,jdbcType=INTEGER},
    ZXJD_F = #{record.zxjdF,jdbcType=INTEGER},
    ZXJD_M = #{record.zxjdM,jdbcType=INTEGER},
    JD = #{record.jd,jdbcType=DOUBLE},
    ZXWD_D = #{record.zxwdD,jdbcType=INTEGER},
    ZXWD_F = #{record.zxwdF,jdbcType=INTEGER},
    ZXWD_M = #{record.zxwdM,jdbcType=INTEGER},
    WD = #{record.wd,jdbcType=DOUBLE},
    LXFSDHHM = #{record.lxfsdhhm,jdbcType=VARCHAR},
    LXFSLXR = #{record.lxfslxr,jdbcType=VARCHAR},
    LXFSCZHM = #{record.lxfsczhm,jdbcType=VARCHAR},
    LXFSYZBM = #{record.lxfsyzbm,jdbcType=VARCHAR},
    WSCLSSLX = #{record.wsclsslx,jdbcType=VARCHAR},
    WSCLCSMC = #{record.wsclcsmc,jdbcType=VARCHAR},
    JCSJ = #{record.jcsj,jdbcType=INTEGER},
    WSCLJB = #{record.wscljb,jdbcType=VARCHAR},
    WSCLFFMC1 = #{record.wsclffmc1,jdbcType=VARCHAR},
    WSCLFFDM1 = #{record.wsclffdm1,jdbcType=VARCHAR},
    WSCLFFMC2 = #{record.wsclffmc2,jdbcType=VARCHAR},
    WSCLFFDM2 = #{record.wsclffdm2,jdbcType=VARCHAR},
    WSCLFFMC3 = #{record.wsclffmc3,jdbcType=VARCHAR},
    WSCLFFDM3 = #{record.wsclffdm3,jdbcType=VARCHAR},
    PSQXLXMC = #{record.psqxlxmc,jdbcType=VARCHAR},
    PSQXLXDM = #{record.psqxlxdm,jdbcType=VARCHAR},
    SNSTMC = #{record.snstmc,jdbcType=VARCHAR},
    SNSTDM = #{record.snstdm,jdbcType=VARCHAR},
    WNYYXHZZ = #{record.wnyyxhzz,jdbcType=VARCHAR},
    WNYYXHZZMC = #{record.wnyyxhzzmc,jdbcType=VARCHAR},
    ZXPFBZ = #{record.zxpfbz,jdbcType=VARCHAR},
    ZXPFBZMC = #{record.zxpfbzmc,jdbcType=VARCHAR},
    ZXPFBZXZJB = #{record.zxpfbzxzjb,jdbcType=VARCHAR},
    ZXPFBZXZJBMC = #{record.zxpfbzxzjbmc,jdbcType=VARCHAR},
    YXTS_T = #{record.yxtsT,jdbcType=INTEGER},
    LJWCTZ_WY = #{record.ljwctzWy,jdbcType=DOUBLE},
    XZGDZCTZ_WY = #{record.xzgdzctzWy,jdbcType=DOUBLE},
    YXFY_WY = #{record.yxfyWy,jdbcType=DOUBLE},
    YDL_WQWS = #{record.ydlWqws,jdbcType=DECIMAL},
    WSSJCLNL_D_R = #{record.wssjclnlDR,jdbcType=DOUBLE},
    WSSJCLL_WD = #{record.wssjcllWd,jdbcType=DOUBLE},
    QZ_CLSHWSL_WD = #{record.qzClshwslWd,jdbcType=DOUBLE},
    QZ_CLGYFSL_WD = #{record.qzClgyfslWd,jdbcType=DOUBLE},
    QZ_CLBXQWDSL_WD = #{record.qzClbxqwdslWd,jdbcType=DOUBLE},
    ZSSSCL_WD = #{record.zsssclWd,jdbcType=DOUBLE},
    ZSSLYL_WD = #{record.zsslylWd,jdbcType=DOUBLE},
    QZ_GYYSL_WD = #{record.qzGyyslWd,jdbcType=DOUBLE},
    QZ_SZYS_WD = #{record.qzSzysWd,jdbcType=DOUBLE},
    QZ_JGYSL_WD = #{record.qzJgyslWd,jdbcType=DOUBLE},
    WNCSL_D = #{record.wncslD,jdbcType=DOUBLE},
    WNCZL_D = #{record.wnczlD,jdbcType=DOUBLE},
    QZ_TDLYL_D = #{record.qzTdlylD,jdbcType=DOUBLE},
    QZ_TMCZL_D = #{record.qzTmczlD,jdbcType=DOUBLE},
    QZ_JZCLLYL_D = #{record.qzJzcllylD,jdbcType=DOUBLE},
    QZ_FSCZL_D = #{record.qzFsczlD,jdbcType=DOUBLE},
    WNQDDQL_D = #{record.wnqddqlD,jdbcType=DOUBLE},
    WNYYXHCQL_LFM = #{record.wnyyxhcqlLfm,jdbcType=DOUBLE},
    HXXYLQCL_D = #{record.hxxylqclD,jdbcType=DOUBLE},
    HXXYLJKND_HK_S = #{record.hxxyljkndHkS,jdbcType=DOUBLE},
    HXXYLCKND_HK_S = #{record.hxxylckndHkS,jdbcType=DOUBLE},
    SHXYLQCL_D = #{record.shxylqclD,jdbcType=DOUBLE},
    SHXYLJKND_HK_S = #{record.shxyljkndHkS,jdbcType=DOUBLE},
    SHXYLCKND_HK_S = #{record.shxylckndHkS,jdbcType=DOUBLE},
    XFWQCL_D = #{record.xfwqclD,jdbcType=DOUBLE},
    XFWJKND_HK_S = #{record.xfwjkndHkS,jdbcType=DOUBLE},
    XFWCKND_HK_S = #{record.xfwckndHkS,jdbcType=DOUBLE},
    DZWYQCL_D = #{record.dzwyqclD,jdbcType=DOUBLE},
    DZWYJKND_HK_S = #{record.dzwyjkndHkS,jdbcType=DOUBLE},
    DZWYCKND_HK_S = #{record.dzwyckndHkS,jdbcType=DOUBLE},
    SYLQCL_D = #{record.sylqclD,jdbcType=DOUBLE},
    SYLJKND_HK_S = #{record.syljkndHkS,jdbcType=DOUBLE},
    SYLCKND_HK_S = #{record.sylckndHkS,jdbcType=DOUBLE},
    YLZHXJQCL_D = #{record.ylzhxjqclD,jdbcType=DOUBLE},
    YLZHXJJKND_HK_S = #{record.ylzhxjjkndHkS,jdbcType=DOUBLE},
    YLZHXJCKND_HK_S = #{record.ylzhxjckndHkS,jdbcType=DOUBLE},
    ADQCL_D = #{record.adqclD,jdbcType=DOUBLE},
    ADJKND_HK_S = #{record.adjkndHkS,jdbcType=DOUBLE},
    ADCKND_HK_S = #{record.adckndHkS,jdbcType=DOUBLE},
    YLQCL_D = #{record.ylqclD,jdbcType=DOUBLE},
    YLJKND_HK_S = #{record.yljkndHkS,jdbcType=DOUBLE},
    YLCKND_HK_S = #{record.ylckndHkS,jdbcType=DOUBLE},
    ZDQCL_D = #{record.zdqclD,jdbcType=DOUBLE},
    ZDJKND_HK_S = #{record.zdjkndHkS,jdbcType=DOUBLE},
    ZDCKND_HK_S = #{record.zdckndHkS,jdbcType=DOUBLE},
    ZLQCL_QK = #{record.zlqclQk,jdbcType=DOUBLE},
    ZLJKND_HK_S = #{record.zljkndHkS,jdbcType=DOUBLE},
    ZLCKND_HK_S = #{record.zlckndHkS,jdbcType=DOUBLE},
    HFFQCL_QK = #{record.hffqclQk,jdbcType=DOUBLE},
    HFFJKND_HK_S = #{record.hffjkndHkS,jdbcType=DOUBLE},
    HFFCKND_HK_S = #{record.hffckndHkS,jdbcType=DOUBLE},
    QHWQCL_QK = #{record.qhwqclQk,jdbcType=DOUBLE},
    QHWJKND_HK_S = #{record.qhwjkndHkS,jdbcType=DOUBLE},
    QHWCKND_HK_S = #{record.qhwckndHkS,jdbcType=DOUBLE},
    SQCL_QK = #{record.sqclQk,jdbcType=DOUBLE},
    SJKND_HK_S = #{record.sjkndHkS,jdbcType=DOUBLE},
    SCKND_HK_S = #{record.sckndHkS,jdbcType=DOUBLE},
    QQCL_QK = #{record.qqclQk,jdbcType=DOUBLE},
    QJKND_HK_S = #{record.qjkndHkS,jdbcType=DOUBLE},
    QCKND_HK_S = #{record.qckndHkS,jdbcType=DOUBLE},
    GQCL_QK = #{record.gqclQk,jdbcType=DOUBLE},
    GJKND_HK_S = #{record.gjkndHkS,jdbcType=DOUBLE},
    GCKND_HK_S = #{record.gckndHkS,jdbcType=DOUBLE},
    GQCL_QK_dup1 = #{record.gqclQkDup1,jdbcType=DOUBLE},
    GJKND_WK_S = #{record.gjkndWkS,jdbcType=DOUBLE},
    GCKND_WK_S = #{record.gckndWkS,jdbcType=DOUBLE},
    ZGQCL_QK = #{record.zgqclQk,jdbcType=DOUBLE},
    ZGJKND_HK_S = #{record.zgjkndHkS,jdbcType=DOUBLE},
    ZGCKND_HK_S = #{record.zgckndHkS,jdbcType=DOUBLE},
    LJGQCL_QK = #{record.ljgqclQk,jdbcType=DOUBLE},
    LJGJKND_HK_S = #{record.ljgjkndHkS,jdbcType=DOUBLE},
    LJGCKND_HK_S = #{record.ljgckndHkS,jdbcType=DOUBLE},
    GY_CLSL_WD_R = #{record.gyClslWdR,jdbcType=DOUBLE},
    GY_XZCLSL_WD_R = #{record.gyXzclslWdR,jdbcType=DOUBLE},
    GY_YXTS_T = #{record.gyYxtsT,jdbcType=DOUBLE},
    GY_CODJKND_HK_S = #{record.gyCodjkndHkS,jdbcType=DOUBLE},
    GY_CODCKND_HK_S = #{record.gyCodckndHkS,jdbcType=DOUBLE},
    GY_ADJKND_HK_S = #{record.gyAdjkndHkS,jdbcType=DOUBLE},
    GY_ADCKND_HK_S = #{record.gyAdckndHkS,jdbcType=DOUBLE},
    SH_CLSL_WD_R = #{record.shClslWdR,jdbcType=DOUBLE},
    SH_XZCLSL_WD_R = #{record.shXzclslWdR,jdbcType=DOUBLE},
    SH_CODJKND_HK_S = #{record.shCodjkndHkS,jdbcType=DOUBLE},
    SH_CODCKND_HK_S = #{record.shCodckndHkS,jdbcType=DOUBLE},
    SH_ADJKND_HK_S = #{record.shAdjkndHkS,jdbcType=DOUBLE},
    SH_ADCKND_HK_S = #{record.shAdckndHkS,jdbcType=DOUBLE},
    HDXZSHCODQCL_D = #{record.hdxzshcodqclD,jdbcType=DOUBLE},
    HDXZSHADQCL_D = #{record.hdxzshadqclD,jdbcType=DOUBLE},
    JYTLC_M = #{record.jytlcM,jdbcType=DOUBLE},
    BZ = #{record.bz,jdbcType=VARCHAR},
    is_del = #{record.isDel,jdbcType=INTEGER},
    poll_bl1 = #{record.pollBl1,jdbcType=VARCHAR},
    poll_bl2 = #{record.pollBl2,jdbcType=VARCHAR},
    poll_bl3 = #{record.pollBl3,jdbcType=VARCHAR},
    poll_bl4 = #{record.pollBl4,jdbcType=VARCHAR},
    poll_bl5 = #{record.pollBl5,jdbcType=VARCHAR},
    poll_bl6 = #{record.pollBl6,jdbcType=VARCHAR},
    poll_bl7 = #{record.pollBl7,jdbcType=VARCHAR},
    poll_bl8 = #{record.pollBl8,jdbcType=VARCHAR},
    poll_bl9 = #{record.pollBl9,jdbcType=VARCHAR},
    poll_bl10 = #{record.pollBl10,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.eliteams.quick4j.web.model.PollFactory">
    update poll_factory
    <set >
      <if test="tjnf != null" >
        TJNF = #{tjnf,jdbcType=INTEGER},
      </if>
      <if test="xzqhdm != null" >
        XZQHDM = #{xzqhdm,jdbcType=VARCHAR},
      </if>
      <if test="xzqhmc != null" >
        XZQHMC = #{xzqhmc,jdbcType=VARCHAR},
      </if>
      <if test="shxydm != null" >
        SHXYDM = #{shxydm,jdbcType=VARCHAR},
      </if>
      <if test="zzjgdm != null" >
        ZZJGDM = #{zzjgdm,jdbcType=VARCHAR},
      </if>
      <if test="dwmcGz != null" >
        DWMC_GZ = #{dwmcGz,jdbcType=VARCHAR},
      </if>
      <if test="ssdm != null" >
        SSDM = #{ssdm,jdbcType=VARCHAR},
      </if>
      <if test="sskzdy != null" >
        SSKZDY = #{sskzdy,jdbcType=VARCHAR},
      </if>
      <if test="yydwmc != null" >
        YYDWMC = #{yydwmc,jdbcType=VARCHAR},
      </if>
      <if test="fddbr != null" >
        FDDBR = #{fddbr,jdbcType=VARCHAR},
      </if>
      <if test="qyxxdzSZzqZxs != null" >
        QYXXDZ_S_ZZQ_ZXS = #{qyxxdzSZzqZxs,jdbcType=VARCHAR},
      </if>
      <if test="qyxxdzDqSZM != null" >
        QYXXDZ_DQ_S_Z_M = #{qyxxdzDqSZM,jdbcType=VARCHAR},
      </if>
      <if test="qyxxdzXQSQ != null" >
        QYXXDZ_X_Q_S_Q = #{qyxxdzXQSQ,jdbcType=VARCHAR},
      </if>
      <if test="qyxxdzXZ != null" >
        QYXXDZ_X_Z = #{qyxxdzXZ,jdbcType=VARCHAR},
      </if>
      <if test="qyxxdzJCMph != null" >
        QYXXDZ_J_C_MPH = #{qyxxdzJCMph,jdbcType=VARCHAR},
      </if>
      <if test="zxjdD != null" >
        ZXJD_D = #{zxjdD,jdbcType=INTEGER},
      </if>
      <if test="zxjdF != null" >
        ZXJD_F = #{zxjdF,jdbcType=INTEGER},
      </if>
      <if test="zxjdM != null" >
        ZXJD_M = #{zxjdM,jdbcType=INTEGER},
      </if>
      <if test="jd != null" >
        JD = #{jd,jdbcType=DOUBLE},
      </if>
      <if test="zxwdD != null" >
        ZXWD_D = #{zxwdD,jdbcType=INTEGER},
      </if>
      <if test="zxwdF != null" >
        ZXWD_F = #{zxwdF,jdbcType=INTEGER},
      </if>
      <if test="zxwdM != null" >
        ZXWD_M = #{zxwdM,jdbcType=INTEGER},
      </if>
      <if test="wd != null" >
        WD = #{wd,jdbcType=DOUBLE},
      </if>
      <if test="lxfsdhhm != null" >
        LXFSDHHM = #{lxfsdhhm,jdbcType=VARCHAR},
      </if>
      <if test="lxfslxr != null" >
        LXFSLXR = #{lxfslxr,jdbcType=VARCHAR},
      </if>
      <if test="lxfsczhm != null" >
        LXFSCZHM = #{lxfsczhm,jdbcType=VARCHAR},
      </if>
      <if test="lxfsyzbm != null" >
        LXFSYZBM = #{lxfsyzbm,jdbcType=VARCHAR},
      </if>
      <if test="wsclsslx != null" >
        WSCLSSLX = #{wsclsslx,jdbcType=VARCHAR},
      </if>
      <if test="wsclcsmc != null" >
        WSCLCSMC = #{wsclcsmc,jdbcType=VARCHAR},
      </if>
      <if test="jcsj != null" >
        JCSJ = #{jcsj,jdbcType=INTEGER},
      </if>
      <if test="wscljb != null" >
        WSCLJB = #{wscljb,jdbcType=VARCHAR},
      </if>
      <if test="wsclffmc1 != null" >
        WSCLFFMC1 = #{wsclffmc1,jdbcType=VARCHAR},
      </if>
      <if test="wsclffdm1 != null" >
        WSCLFFDM1 = #{wsclffdm1,jdbcType=VARCHAR},
      </if>
      <if test="wsclffmc2 != null" >
        WSCLFFMC2 = #{wsclffmc2,jdbcType=VARCHAR},
      </if>
      <if test="wsclffdm2 != null" >
        WSCLFFDM2 = #{wsclffdm2,jdbcType=VARCHAR},
      </if>
      <if test="wsclffmc3 != null" >
        WSCLFFMC3 = #{wsclffmc3,jdbcType=VARCHAR},
      </if>
      <if test="wsclffdm3 != null" >
        WSCLFFDM3 = #{wsclffdm3,jdbcType=VARCHAR},
      </if>
      <if test="psqxlxmc != null" >
        PSQXLXMC = #{psqxlxmc,jdbcType=VARCHAR},
      </if>
      <if test="psqxlxdm != null" >
        PSQXLXDM = #{psqxlxdm,jdbcType=VARCHAR},
      </if>
      <if test="snstmc != null" >
        SNSTMC = #{snstmc,jdbcType=VARCHAR},
      </if>
      <if test="snstdm != null" >
        SNSTDM = #{snstdm,jdbcType=VARCHAR},
      </if>
      <if test="wnyyxhzz != null" >
        WNYYXHZZ = #{wnyyxhzz,jdbcType=VARCHAR},
      </if>
      <if test="wnyyxhzzmc != null" >
        WNYYXHZZMC = #{wnyyxhzzmc,jdbcType=VARCHAR},
      </if>
      <if test="zxpfbz != null" >
        ZXPFBZ = #{zxpfbz,jdbcType=VARCHAR},
      </if>
      <if test="zxpfbzmc != null" >
        ZXPFBZMC = #{zxpfbzmc,jdbcType=VARCHAR},
      </if>
      <if test="zxpfbzxzjb != null" >
        ZXPFBZXZJB = #{zxpfbzxzjb,jdbcType=VARCHAR},
      </if>
      <if test="zxpfbzxzjbmc != null" >
        ZXPFBZXZJBMC = #{zxpfbzxzjbmc,jdbcType=VARCHAR},
      </if>
      <if test="yxtsT != null" >
        YXTS_T = #{yxtsT,jdbcType=INTEGER},
      </if>
      <if test="ljwctzWy != null" >
        LJWCTZ_WY = #{ljwctzWy,jdbcType=DOUBLE},
      </if>
      <if test="xzgdzctzWy != null" >
        XZGDZCTZ_WY = #{xzgdzctzWy,jdbcType=DOUBLE},
      </if>
      <if test="yxfyWy != null" >
        YXFY_WY = #{yxfyWy,jdbcType=DOUBLE},
      </if>
      <if test="ydlWqws != null" >
        YDL_WQWS = #{ydlWqws,jdbcType=DECIMAL},
      </if>
      <if test="wssjclnlDR != null" >
        WSSJCLNL_D_R = #{wssjclnlDR,jdbcType=DOUBLE},
      </if>
      <if test="wssjcllWd != null" >
        WSSJCLL_WD = #{wssjcllWd,jdbcType=DOUBLE},
      </if>
      <if test="qzClshwslWd != null" >
        QZ_CLSHWSL_WD = #{qzClshwslWd,jdbcType=DOUBLE},
      </if>
      <if test="qzClgyfslWd != null" >
        QZ_CLGYFSL_WD = #{qzClgyfslWd,jdbcType=DOUBLE},
      </if>
      <if test="qzClbxqwdslWd != null" >
        QZ_CLBXQWDSL_WD = #{qzClbxqwdslWd,jdbcType=DOUBLE},
      </if>
      <if test="zsssclWd != null" >
        ZSSSCL_WD = #{zsssclWd,jdbcType=DOUBLE},
      </if>
      <if test="zsslylWd != null" >
        ZSSLYL_WD = #{zsslylWd,jdbcType=DOUBLE},
      </if>
      <if test="qzGyyslWd != null" >
        QZ_GYYSL_WD = #{qzGyyslWd,jdbcType=DOUBLE},
      </if>
      <if test="qzSzysWd != null" >
        QZ_SZYS_WD = #{qzSzysWd,jdbcType=DOUBLE},
      </if>
      <if test="qzJgyslWd != null" >
        QZ_JGYSL_WD = #{qzJgyslWd,jdbcType=DOUBLE},
      </if>
      <if test="wncslD != null" >
        WNCSL_D = #{wncslD,jdbcType=DOUBLE},
      </if>
      <if test="wnczlD != null" >
        WNCZL_D = #{wnczlD,jdbcType=DOUBLE},
      </if>
      <if test="qzTdlylD != null" >
        QZ_TDLYL_D = #{qzTdlylD,jdbcType=DOUBLE},
      </if>
      <if test="qzTmczlD != null" >
        QZ_TMCZL_D = #{qzTmczlD,jdbcType=DOUBLE},
      </if>
      <if test="qzJzcllylD != null" >
        QZ_JZCLLYL_D = #{qzJzcllylD,jdbcType=DOUBLE},
      </if>
      <if test="qzFsczlD != null" >
        QZ_FSCZL_D = #{qzFsczlD,jdbcType=DOUBLE},
      </if>
      <if test="wnqddqlD != null" >
        WNQDDQL_D = #{wnqddqlD,jdbcType=DOUBLE},
      </if>
      <if test="wnyyxhcqlLfm != null" >
        WNYYXHCQL_LFM = #{wnyyxhcqlLfm,jdbcType=DOUBLE},
      </if>
      <if test="hxxylqclD != null" >
        HXXYLQCL_D = #{hxxylqclD,jdbcType=DOUBLE},
      </if>
      <if test="hxxyljkndHkS != null" >
        HXXYLJKND_HK_S = #{hxxyljkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="hxxylckndHkS != null" >
        HXXYLCKND_HK_S = #{hxxylckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="shxylqclD != null" >
        SHXYLQCL_D = #{shxylqclD,jdbcType=DOUBLE},
      </if>
      <if test="shxyljkndHkS != null" >
        SHXYLJKND_HK_S = #{shxyljkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="shxylckndHkS != null" >
        SHXYLCKND_HK_S = #{shxylckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="xfwqclD != null" >
        XFWQCL_D = #{xfwqclD,jdbcType=DOUBLE},
      </if>
      <if test="xfwjkndHkS != null" >
        XFWJKND_HK_S = #{xfwjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="xfwckndHkS != null" >
        XFWCKND_HK_S = #{xfwckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="dzwyqclD != null" >
        DZWYQCL_D = #{dzwyqclD,jdbcType=DOUBLE},
      </if>
      <if test="dzwyjkndHkS != null" >
        DZWYJKND_HK_S = #{dzwyjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="dzwyckndHkS != null" >
        DZWYCKND_HK_S = #{dzwyckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="sylqclD != null" >
        SYLQCL_D = #{sylqclD,jdbcType=DOUBLE},
      </if>
      <if test="syljkndHkS != null" >
        SYLJKND_HK_S = #{syljkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="sylckndHkS != null" >
        SYLCKND_HK_S = #{sylckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="ylzhxjqclD != null" >
        YLZHXJQCL_D = #{ylzhxjqclD,jdbcType=DOUBLE},
      </if>
      <if test="ylzhxjjkndHkS != null" >
        YLZHXJJKND_HK_S = #{ylzhxjjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="ylzhxjckndHkS != null" >
        YLZHXJCKND_HK_S = #{ylzhxjckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="adqclD != null" >
        ADQCL_D = #{adqclD,jdbcType=DOUBLE},
      </if>
      <if test="adjkndHkS != null" >
        ADJKND_HK_S = #{adjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="adckndHkS != null" >
        ADCKND_HK_S = #{adckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="ylqclD != null" >
        YLQCL_D = #{ylqclD,jdbcType=DOUBLE},
      </if>
      <if test="yljkndHkS != null" >
        YLJKND_HK_S = #{yljkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="ylckndHkS != null" >
        YLCKND_HK_S = #{ylckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="zdqclD != null" >
        ZDQCL_D = #{zdqclD,jdbcType=DOUBLE},
      </if>
      <if test="zdjkndHkS != null" >
        ZDJKND_HK_S = #{zdjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="zdckndHkS != null" >
        ZDCKND_HK_S = #{zdckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="zlqclQk != null" >
        ZLQCL_QK = #{zlqclQk,jdbcType=DOUBLE},
      </if>
      <if test="zljkndHkS != null" >
        ZLJKND_HK_S = #{zljkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="zlckndHkS != null" >
        ZLCKND_HK_S = #{zlckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="hffqclQk != null" >
        HFFQCL_QK = #{hffqclQk,jdbcType=DOUBLE},
      </if>
      <if test="hffjkndHkS != null" >
        HFFJKND_HK_S = #{hffjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="hffckndHkS != null" >
        HFFCKND_HK_S = #{hffckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="qhwqclQk != null" >
        QHWQCL_QK = #{qhwqclQk,jdbcType=DOUBLE},
      </if>
      <if test="qhwjkndHkS != null" >
        QHWJKND_HK_S = #{qhwjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="qhwckndHkS != null" >
        QHWCKND_HK_S = #{qhwckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="sqclQk != null" >
        SQCL_QK = #{sqclQk,jdbcType=DOUBLE},
      </if>
      <if test="sjkndHkS != null" >
        SJKND_HK_S = #{sjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="sckndHkS != null" >
        SCKND_HK_S = #{sckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="qqclQk != null" >
        QQCL_QK = #{qqclQk,jdbcType=DOUBLE},
      </if>
      <if test="qjkndHkS != null" >
        QJKND_HK_S = #{qjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="qckndHkS != null" >
        QCKND_HK_S = #{qckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="gqclQk != null" >
        GQCL_QK = #{gqclQk,jdbcType=DOUBLE},
      </if>
      <if test="gjkndHkS != null" >
        GJKND_HK_S = #{gjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="gckndHkS != null" >
        GCKND_HK_S = #{gckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="gqclQkDup1 != null" >
        GQCL_QK_dup1 = #{gqclQkDup1,jdbcType=DOUBLE},
      </if>
      <if test="gjkndWkS != null" >
        GJKND_WK_S = #{gjkndWkS,jdbcType=DOUBLE},
      </if>
      <if test="gckndWkS != null" >
        GCKND_WK_S = #{gckndWkS,jdbcType=DOUBLE},
      </if>
      <if test="zgqclQk != null" >
        ZGQCL_QK = #{zgqclQk,jdbcType=DOUBLE},
      </if>
      <if test="zgjkndHkS != null" >
        ZGJKND_HK_S = #{zgjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="zgckndHkS != null" >
        ZGCKND_HK_S = #{zgckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="ljgqclQk != null" >
        LJGQCL_QK = #{ljgqclQk,jdbcType=DOUBLE},
      </if>
      <if test="ljgjkndHkS != null" >
        LJGJKND_HK_S = #{ljgjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="ljgckndHkS != null" >
        LJGCKND_HK_S = #{ljgckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="gyClslWdR != null" >
        GY_CLSL_WD_R = #{gyClslWdR,jdbcType=DOUBLE},
      </if>
      <if test="gyXzclslWdR != null" >
        GY_XZCLSL_WD_R = #{gyXzclslWdR,jdbcType=DOUBLE},
      </if>
      <if test="gyYxtsT != null" >
        GY_YXTS_T = #{gyYxtsT,jdbcType=DOUBLE},
      </if>
      <if test="gyCodjkndHkS != null" >
        GY_CODJKND_HK_S = #{gyCodjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="gyCodckndHkS != null" >
        GY_CODCKND_HK_S = #{gyCodckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="gyAdjkndHkS != null" >
        GY_ADJKND_HK_S = #{gyAdjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="gyAdckndHkS != null" >
        GY_ADCKND_HK_S = #{gyAdckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="shClslWdR != null" >
        SH_CLSL_WD_R = #{shClslWdR,jdbcType=DOUBLE},
      </if>
      <if test="shXzclslWdR != null" >
        SH_XZCLSL_WD_R = #{shXzclslWdR,jdbcType=DOUBLE},
      </if>
      <if test="shCodjkndHkS != null" >
        SH_CODJKND_HK_S = #{shCodjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="shCodckndHkS != null" >
        SH_CODCKND_HK_S = #{shCodckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="shAdjkndHkS != null" >
        SH_ADJKND_HK_S = #{shAdjkndHkS,jdbcType=DOUBLE},
      </if>
      <if test="shAdckndHkS != null" >
        SH_ADCKND_HK_S = #{shAdckndHkS,jdbcType=DOUBLE},
      </if>
      <if test="hdxzshcodqclD != null" >
        HDXZSHCODQCL_D = #{hdxzshcodqclD,jdbcType=DOUBLE},
      </if>
      <if test="hdxzshadqclD != null" >
        HDXZSHADQCL_D = #{hdxzshadqclD,jdbcType=DOUBLE},
      </if>
      <if test="jytlcM != null" >
        JYTLC_M = #{jytlcM,jdbcType=DOUBLE},
      </if>
      <if test="bz != null" >
        BZ = #{bz,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null" >
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="pollBl1 != null" >
        poll_bl1 = #{pollBl1,jdbcType=VARCHAR},
      </if>
      <if test="pollBl2 != null" >
        poll_bl2 = #{pollBl2,jdbcType=VARCHAR},
      </if>
      <if test="pollBl3 != null" >
        poll_bl3 = #{pollBl3,jdbcType=VARCHAR},
      </if>
      <if test="pollBl4 != null" >
        poll_bl4 = #{pollBl4,jdbcType=VARCHAR},
      </if>
      <if test="pollBl5 != null" >
        poll_bl5 = #{pollBl5,jdbcType=VARCHAR},
      </if>
      <if test="pollBl6 != null" >
        poll_bl6 = #{pollBl6,jdbcType=VARCHAR},
      </if>
      <if test="pollBl7 != null" >
        poll_bl7 = #{pollBl7,jdbcType=VARCHAR},
      </if>
      <if test="pollBl8 != null" >
        poll_bl8 = #{pollBl8,jdbcType=VARCHAR},
      </if>
      <if test="pollBl9 != null" >
        poll_bl9 = #{pollBl9,jdbcType=VARCHAR},
      </if>
      <if test="pollBl10 != null" >
        poll_bl10 = #{pollBl10,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eliteams.quick4j.web.model.PollFactory">
    update poll_factory
    set TJNF = #{tjnf,jdbcType=INTEGER},
        XZQHDM = #{xzqhdm,jdbcType=VARCHAR},
        XZQHMC = #{xzqhmc,jdbcType=VARCHAR},
        SHXYDM = #{shxydm,jdbcType=VARCHAR},
        ZZJGDM = #{zzjgdm,jdbcType=VARCHAR},
        DWMC_GZ = #{dwmcGz,jdbcType=VARCHAR},
        SSDM = #{ssdm,jdbcType=VARCHAR},
        SSKZDY = #{sskzdy,jdbcType=VARCHAR},
        YYDWMC = #{yydwmc,jdbcType=VARCHAR},
        FDDBR = #{fddbr,jdbcType=VARCHAR},
        QYXXDZ_S_ZZQ_ZXS = #{qyxxdzSZzqZxs,jdbcType=VARCHAR},
        QYXXDZ_DQ_S_Z_M = #{qyxxdzDqSZM,jdbcType=VARCHAR},
        QYXXDZ_X_Q_S_Q = #{qyxxdzXQSQ,jdbcType=VARCHAR},
        QYXXDZ_X_Z = #{qyxxdzXZ,jdbcType=VARCHAR},
        QYXXDZ_J_C_MPH = #{qyxxdzJCMph,jdbcType=VARCHAR},
        ZXJD_D = #{zxjdD,jdbcType=INTEGER},
        ZXJD_F = #{zxjdF,jdbcType=INTEGER},
        ZXJD_M = #{zxjdM,jdbcType=INTEGER},
        JD = #{jd,jdbcType=DOUBLE},
        ZXWD_D = #{zxwdD,jdbcType=INTEGER},
        ZXWD_F = #{zxwdF,jdbcType=INTEGER},
        ZXWD_M = #{zxwdM,jdbcType=INTEGER},
        WD = #{wd,jdbcType=DOUBLE},
        LXFSDHHM = #{lxfsdhhm,jdbcType=VARCHAR},
        LXFSLXR = #{lxfslxr,jdbcType=VARCHAR},
        LXFSCZHM = #{lxfsczhm,jdbcType=VARCHAR},
        LXFSYZBM = #{lxfsyzbm,jdbcType=VARCHAR},
        WSCLSSLX = #{wsclsslx,jdbcType=VARCHAR},
        WSCLCSMC = #{wsclcsmc,jdbcType=VARCHAR},
        JCSJ = #{jcsj,jdbcType=INTEGER},
        WSCLJB = #{wscljb,jdbcType=VARCHAR},
        WSCLFFMC1 = #{wsclffmc1,jdbcType=VARCHAR},
        WSCLFFDM1 = #{wsclffdm1,jdbcType=VARCHAR},
        WSCLFFMC2 = #{wsclffmc2,jdbcType=VARCHAR},
        WSCLFFDM2 = #{wsclffdm2,jdbcType=VARCHAR},
        WSCLFFMC3 = #{wsclffmc3,jdbcType=VARCHAR},
        WSCLFFDM3 = #{wsclffdm3,jdbcType=VARCHAR},
        PSQXLXMC = #{psqxlxmc,jdbcType=VARCHAR},
        PSQXLXDM = #{psqxlxdm,jdbcType=VARCHAR},
        SNSTMC = #{snstmc,jdbcType=VARCHAR},
        SNSTDM = #{snstdm,jdbcType=VARCHAR},
        WNYYXHZZ = #{wnyyxhzz,jdbcType=VARCHAR},
        WNYYXHZZMC = #{wnyyxhzzmc,jdbcType=VARCHAR},
        ZXPFBZ = #{zxpfbz,jdbcType=VARCHAR},
        ZXPFBZMC = #{zxpfbzmc,jdbcType=VARCHAR},
        ZXPFBZXZJB = #{zxpfbzxzjb,jdbcType=VARCHAR},
        ZXPFBZXZJBMC = #{zxpfbzxzjbmc,jdbcType=VARCHAR},
        YXTS_T = #{yxtsT,jdbcType=INTEGER},
        LJWCTZ_WY = #{ljwctzWy,jdbcType=DOUBLE},
        XZGDZCTZ_WY = #{xzgdzctzWy,jdbcType=DOUBLE},
        YXFY_WY = #{yxfyWy,jdbcType=DOUBLE},
        YDL_WQWS = #{ydlWqws,jdbcType=DECIMAL},
        WSSJCLNL_D_R = #{wssjclnlDR,jdbcType=DOUBLE},
        WSSJCLL_WD = #{wssjcllWd,jdbcType=DOUBLE},
        QZ_CLSHWSL_WD = #{qzClshwslWd,jdbcType=DOUBLE},
        QZ_CLGYFSL_WD = #{qzClgyfslWd,jdbcType=DOUBLE},
        QZ_CLBXQWDSL_WD = #{qzClbxqwdslWd,jdbcType=DOUBLE},
        ZSSSCL_WD = #{zsssclWd,jdbcType=DOUBLE},
        ZSSLYL_WD = #{zsslylWd,jdbcType=DOUBLE},
        QZ_GYYSL_WD = #{qzGyyslWd,jdbcType=DOUBLE},
        QZ_SZYS_WD = #{qzSzysWd,jdbcType=DOUBLE},
        QZ_JGYSL_WD = #{qzJgyslWd,jdbcType=DOUBLE},
        WNCSL_D = #{wncslD,jdbcType=DOUBLE},
        WNCZL_D = #{wnczlD,jdbcType=DOUBLE},
        QZ_TDLYL_D = #{qzTdlylD,jdbcType=DOUBLE},
        QZ_TMCZL_D = #{qzTmczlD,jdbcType=DOUBLE},
        QZ_JZCLLYL_D = #{qzJzcllylD,jdbcType=DOUBLE},
        QZ_FSCZL_D = #{qzFsczlD,jdbcType=DOUBLE},
        WNQDDQL_D = #{wnqddqlD,jdbcType=DOUBLE},
        WNYYXHCQL_LFM = #{wnyyxhcqlLfm,jdbcType=DOUBLE},
        HXXYLQCL_D = #{hxxylqclD,jdbcType=DOUBLE},
        HXXYLJKND_HK_S = #{hxxyljkndHkS,jdbcType=DOUBLE},
        HXXYLCKND_HK_S = #{hxxylckndHkS,jdbcType=DOUBLE},
        SHXYLQCL_D = #{shxylqclD,jdbcType=DOUBLE},
        SHXYLJKND_HK_S = #{shxyljkndHkS,jdbcType=DOUBLE},
        SHXYLCKND_HK_S = #{shxylckndHkS,jdbcType=DOUBLE},
        XFWQCL_D = #{xfwqclD,jdbcType=DOUBLE},
        XFWJKND_HK_S = #{xfwjkndHkS,jdbcType=DOUBLE},
        XFWCKND_HK_S = #{xfwckndHkS,jdbcType=DOUBLE},
        DZWYQCL_D = #{dzwyqclD,jdbcType=DOUBLE},
        DZWYJKND_HK_S = #{dzwyjkndHkS,jdbcType=DOUBLE},
        DZWYCKND_HK_S = #{dzwyckndHkS,jdbcType=DOUBLE},
        SYLQCL_D = #{sylqclD,jdbcType=DOUBLE},
        SYLJKND_HK_S = #{syljkndHkS,jdbcType=DOUBLE},
        SYLCKND_HK_S = #{sylckndHkS,jdbcType=DOUBLE},
        YLZHXJQCL_D = #{ylzhxjqclD,jdbcType=DOUBLE},
        YLZHXJJKND_HK_S = #{ylzhxjjkndHkS,jdbcType=DOUBLE},
        YLZHXJCKND_HK_S = #{ylzhxjckndHkS,jdbcType=DOUBLE},
        ADQCL_D = #{adqclD,jdbcType=DOUBLE},
        ADJKND_HK_S = #{adjkndHkS,jdbcType=DOUBLE},
        ADCKND_HK_S = #{adckndHkS,jdbcType=DOUBLE},
        YLQCL_D = #{ylqclD,jdbcType=DOUBLE},
        YLJKND_HK_S = #{yljkndHkS,jdbcType=DOUBLE},
        YLCKND_HK_S = #{ylckndHkS,jdbcType=DOUBLE},
        ZDQCL_D = #{zdqclD,jdbcType=DOUBLE},
        ZDJKND_HK_S = #{zdjkndHkS,jdbcType=DOUBLE},
        ZDCKND_HK_S = #{zdckndHkS,jdbcType=DOUBLE},
        ZLQCL_QK = #{zlqclQk,jdbcType=DOUBLE},
        ZLJKND_HK_S = #{zljkndHkS,jdbcType=DOUBLE},
        ZLCKND_HK_S = #{zlckndHkS,jdbcType=DOUBLE},
        HFFQCL_QK = #{hffqclQk,jdbcType=DOUBLE},
        HFFJKND_HK_S = #{hffjkndHkS,jdbcType=DOUBLE},
        HFFCKND_HK_S = #{hffckndHkS,jdbcType=DOUBLE},
        QHWQCL_QK = #{qhwqclQk,jdbcType=DOUBLE},
        QHWJKND_HK_S = #{qhwjkndHkS,jdbcType=DOUBLE},
        QHWCKND_HK_S = #{qhwckndHkS,jdbcType=DOUBLE},
        SQCL_QK = #{sqclQk,jdbcType=DOUBLE},
        SJKND_HK_S = #{sjkndHkS,jdbcType=DOUBLE},
        SCKND_HK_S = #{sckndHkS,jdbcType=DOUBLE},
        QQCL_QK = #{qqclQk,jdbcType=DOUBLE},
        QJKND_HK_S = #{qjkndHkS,jdbcType=DOUBLE},
        QCKND_HK_S = #{qckndHkS,jdbcType=DOUBLE},
        GQCL_QK = #{gqclQk,jdbcType=DOUBLE},
        GJKND_HK_S = #{gjkndHkS,jdbcType=DOUBLE},
        GCKND_HK_S = #{gckndHkS,jdbcType=DOUBLE},
        GQCL_QK_dup1 = #{gqclQkDup1,jdbcType=DOUBLE},
        GJKND_WK_S = #{gjkndWkS,jdbcType=DOUBLE},
        GCKND_WK_S = #{gckndWkS,jdbcType=DOUBLE},
        ZGQCL_QK = #{zgqclQk,jdbcType=DOUBLE},
        ZGJKND_HK_S = #{zgjkndHkS,jdbcType=DOUBLE},
        ZGCKND_HK_S = #{zgckndHkS,jdbcType=DOUBLE},
        LJGQCL_QK = #{ljgqclQk,jdbcType=DOUBLE},
        LJGJKND_HK_S = #{ljgjkndHkS,jdbcType=DOUBLE},
        LJGCKND_HK_S = #{ljgckndHkS,jdbcType=DOUBLE},
        GY_CLSL_WD_R = #{gyClslWdR,jdbcType=DOUBLE},
        GY_XZCLSL_WD_R = #{gyXzclslWdR,jdbcType=DOUBLE},
        GY_YXTS_T = #{gyYxtsT,jdbcType=DOUBLE},
        GY_CODJKND_HK_S = #{gyCodjkndHkS,jdbcType=DOUBLE},
        GY_CODCKND_HK_S = #{gyCodckndHkS,jdbcType=DOUBLE},
        GY_ADJKND_HK_S = #{gyAdjkndHkS,jdbcType=DOUBLE},
        GY_ADCKND_HK_S = #{gyAdckndHkS,jdbcType=DOUBLE},
        SH_CLSL_WD_R = #{shClslWdR,jdbcType=DOUBLE},
        SH_XZCLSL_WD_R = #{shXzclslWdR,jdbcType=DOUBLE},
        SH_CODJKND_HK_S = #{shCodjkndHkS,jdbcType=DOUBLE},
        SH_CODCKND_HK_S = #{shCodckndHkS,jdbcType=DOUBLE},
        SH_ADJKND_HK_S = #{shAdjkndHkS,jdbcType=DOUBLE},
        SH_ADCKND_HK_S = #{shAdckndHkS,jdbcType=DOUBLE},
        HDXZSHCODQCL_D = #{hdxzshcodqclD,jdbcType=DOUBLE},
        HDXZSHADQCL_D = #{hdxzshadqclD,jdbcType=DOUBLE},
        JYTLC_M = #{jytlcM,jdbcType=DOUBLE},
        BZ = #{bz,jdbcType=VARCHAR},
        is_del = #{isDel,jdbcType=INTEGER},
        poll_bl1 = #{pollBl1,jdbcType=VARCHAR},
        poll_bl2 = #{pollBl2,jdbcType=VARCHAR},
        poll_bl3 = #{pollBl3,jdbcType=VARCHAR},
        poll_bl4 = #{pollBl4,jdbcType=VARCHAR},
        poll_bl5 = #{pollBl5,jdbcType=VARCHAR},
        poll_bl6 = #{pollBl6,jdbcType=VARCHAR},
        poll_bl7 = #{pollBl7,jdbcType=VARCHAR},
        poll_bl8 = #{pollBl8,jdbcType=VARCHAR},
        poll_bl9 = #{pollBl9,jdbcType=VARCHAR},
        poll_bl10 = #{pollBl10,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
    <update id="deleteById" parameterType="java.lang.Long">
		update poll_factory
		set is_del = 1
		where ID = #{id,jdbcType=INTEGER}
	
  	</update>
    <select id="listAll" resultMap="BaseResultMap">    
        select 
        <include refid="Base_Column_List" />
        from poll_factory
        where
        <if test="map.tjnf != null"> TJNF = #{map.tjnf} and  </if> 
        is_del = 0  
        ORDER BY XZQHMC
   </select>  
   <!-- 分页SQL语句 -->
	<select id="selectByPage" resultMap="BaseResultMap">
		select
		*
		from poll_factory
		WHERE
		<if test="map.tjnf != null"> TJNF = #{map.tjnf} and  </if>
		is_del = 0
		ORDER BY XZQHMC
		limit #{startPos},#{pageSize}
	</select>
	<!-- 取得记录的总数 -->
	<select id="getCount" resultType="long">
		select
		count(*)
		from poll_factory
		where
		<if test="map.tjnf != null"> TJNF = #{map.tjnf} and  </if>
		is_del = 0
		ORDER BY XZQHMC
	</select> 
    <select id="getSearchCount" resultType="java.lang.Integer" parameterType="java.util.Map">
		select
		count(*)
		from poll_factory
		WHERE
		<trim>  
				<if test="map.tjnf !=null"> TJNF LIKE CONCAT('%', #{map.tjnf},'%') and </if>
				<if test="map.id !=null"> id LIKE CONCAT('%', #{map.id},'%') and </if>
				<if test="map.xzqhmc !=null"> XZQHMC LIKE CONCAT('%', #{map.xzqhmc},'%') and </if>
				<if test="map.zzjgdm !=null"> ZZJGDM LIKE CONCAT('%', #{map.zzjgdm},'%') and </if>
				<if test="map.dwmcGz !=null"> DWMC_GZ LIKE CONCAT('%', #{map.dwmcGz},'%') and </if>
				<if test="map.ssdm !=null"> SSDM LIKE CONCAT('%', #{map.ssdm},'%') and </if>
				<if test="map.sskzdy !=null"> SSKZDY LIKE CONCAT('%', #{map.sskzdy},'%') and </if>
				<if test="map.qyxxdzDqSZM !=null"> QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.qyxxdzDqSZM},'%') and </if>
				<if test="map.qyxxdzXQSQ !=null"> QYXXDZ_X_Q_S_Q LIKE CONCAT('%', #{map.qyxxdzXQSQ},'%') and </if>
				<if test="map.qyxxdzXZ !=null"> QYXXDZ_X_Z LIKE CONCAT('%', #{map.qyxxdzXZ},'%') and </if>
				<if test="map.qyxxdzJCMph !=null"> QYXXDZ_J_C_MPH LIKE CONCAT('%', #{map.qyxxdzJCMph},'%') and </if>
				<if test="map.jd !=null"> JD LIKE CONCAT('%', #{map.jd},'%') and </if>
				<if test="map.wd !=null"> WD LIKE CONCAT('%', #{map.wd},'%') and </if>
				<if test="map.wsclffmc1 !=null"> WSCLFFMC1 LIKE CONCAT('%', #{map.wsclffmc1},'%') and </if>
				<if test="map.psqxlxmc !=null"> PSQXLXMC LIKE CONCAT('%', #{map.psqxlxmc},'%') and </if>
				<if test="map.snstmc !=null"> SNSTMC LIKE CONCAT('%', #{map.snstmc},'%') and </if>
				<if test="map.yxtsT !=null"> YXTS_T LIKE CONCAT('%', #{map.yxtsT},'%') and </if>
				<if test="map.wssjclnlDR !=null"> WSSJCLNL_D_R LIKE CONCAT('%', #{map.wssjclnlDR},'%') and </if>
				<if test="map.wssjcllWd !=null"> WSSJCLL_WD LIKE CONCAT('%', #{map.wssjcllWd},'%') and </if>
				<if test="map.qzClshwslWd !=null"> QZ_CLSHWSL_WD LIKE CONCAT('%', #{map.qzClshwslWd},'%') and </if>
				<if test="map.qzClgyfslWd !=null"> QZ_CLGYFSL_WD LIKE CONCAT('%', #{map.qzClgyfslWd},'%') and </if>
				<if test="map.hxxylqclD !=null"> HXXYLQCL_D LIKE CONCAT('%', #{map.hxxylqclD},'%') and </if>
				<if test="map.hxxyljkndHkS !=null"> HXXYLJKND_HK_S LIKE CONCAT('%', #{map.hxxyljkndHkS},'%') and </if>
				<if test="map.hxxylckndHkS !=null"> HXXYLCKND_HK_S LIKE CONCAT('%', #{map.hxxylckndHkS},'%') and </if>
				<if test="map.adqclD !=null"> ADQCL_D LIKE CONCAT('%', #{map.adqclD},'%') and </if>
				<if test="map.adjkndHkS !=null"> ADJKND_HK_S LIKE CONCAT('%', #{map.adjkndHkS},'%') and </if>
				<if test="map.adckndHkS !=null"> ADCKND_HK_S LIKE CONCAT('%', #{map.adckndHkS},'%') and </if>
				<if test="map.zdqclD !=null"> ZDQCL_D LIKE CONCAT('%', #{map.zdqclD},'%') and </if>
				<if test="map.zdjkndHkS !=null"> ZDJKND_HK_S LIKE CONCAT('%', #{map.zdjkndHkS},'%') and </if>
				<if test="map.zdckndHkS !=null"> ZDCKND_HK_S LIKE CONCAT('%', #{map.zdckndHkS},'%') and </if>
				<if test="map.zlqclQk !=null"> ZLQCL_QK LIKE CONCAT('%', #{map.zlqclQk},'%') and </if>
				<if test="map.zljkndHkS !=null"> ZLJKND_HK_S LIKE CONCAT('%', #{map.zljkndHkS},'%') and </if>
				<if test="map.zlckndHkS !=null"> ZLCKND_HK_S LIKE CONCAT('%', #{map.zlckndHkS},'%') and </if>


          <if test="map.wnqddqlD !=null"> YXTS_T LIKE CONCAT('%', #{map.wnqddqlD},'%') and </if>
          <if test="map.shxylqclD !=null"> WSSJCLNL_D_R LIKE CONCAT('%', #{map.shxylqclD},'%') and </if>
          <if test="map.shxyljkndHKS !=null"> WSSJCLL_WD LIKE CONCAT('%', #{map.shxyljkndHKS},'%') and </if>
          <if test="map.shxylckndHKS !=null"> QZ_CLSHWSL_WD LIKE CONCAT('%', #{map.shxylckndHKS},'%') and </if>
          <if test="map.xfwqclD !=null"> QZ_CLGYFSL_WD LIKE CONCAT('%', #{map.xfwqclD},'%') and </if>
          <if test="map.xfwjkndHKS !=null"> HXXYLQCL_D LIKE CONCAT('%', #{map.xfwjkndHKS},'%') and </if>
          <if test="map.xfwckndHKS !=null"> HXXYLJKND_HK_S LIKE CONCAT('%', #{map.xfwckndHKS},'%') and </if>
          <if test="map.dzwyqclD !=null"> HXXYLCKND_HK_S LIKE CONCAT('%', #{map.dzwyqclD},'%') and </if>
          <if test="map.dzwyjkndHKS !=null"> ADQCL_D LIKE CONCAT('%', #{map.dzwyjkndHKS},'%') and </if>
          <if test="map.dzwyckndHKS !=null"> ADJKND_HK_S LIKE CONCAT('%', #{map.dzwyckndHKS},'%') and </if>
          <if test="map.sylqclD !=null"> ADCKND_HK_S LIKE CONCAT('%', #{map.sylqclD},'%') and </if>
          <if test="map.syljkndHKS !=null"> ZDQCL_D LIKE CONCAT('%', #{map.syljkndHKS},'%') and </if>
          <if test="map.sylckndHKS !=null"> ZDJKND_HK_S LIKE CONCAT('%', #{map.sylckndHKS},'%') and </if>
          <if test="map.ylzhxjqclD !=null"> ZDCKND_HK_S LIKE CONCAT('%', #{map.ylzhxjqclD},'%') and </if>
          <if test="map.ylzhxjjkndHKS !=null"> ZLQCL_QK LIKE CONCAT('%', #{map.ylzhxjjkndHKS},'%') and </if>
          <if test="map.ylzhxjckndHKS !=null"> ZLJKND_HK_S LIKE CONCAT('%', #{map.ylzhxjckndHKS},'%') and </if>
		        is_del = 0
		</trim>
		ORDER BY XZQHMC
	</select>	
 	<select id="searchByPage" resultMap="BaseResultMap">
		select
		*
		from poll_factory
		WHERE
		<trim>
				<if test="map.tjnf !=null"> TJNF LIKE CONCAT('%', #{map.tjnf},'%') and </if>  
				<if test="map.id !=null"> id LIKE CONCAT('%', #{map.id},'%') and </if>
				<if test="map.xzqhmc !=null"> XZQHMC LIKE CONCAT('%', #{map.xzqhmc},'%') and </if>
				<if test="map.zzjgdm !=null"> ZZJGDM LIKE CONCAT('%', #{map.zzjgdm},'%') and </if>
				<if test="map.dwmcGz !=null"> DWMC_GZ LIKE CONCAT('%', #{map.dwmcGz},'%') and </if>
				<if test="map.ssdm !=null"> SSDM LIKE CONCAT('%', #{map.ssdm},'%') and </if>
				<if test="map.sskzdy !=null"> SSKZDY LIKE CONCAT('%', #{map.sskzdy},'%') and </if>
				<if test="map.qyxxdzDqSZM !=null"> QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.qyxxdzDqSZM},'%') and </if>
				<if test="map.qyxxdzXQSQ !=null"> QYXXDZ_X_Q_S_Q LIKE CONCAT('%', #{map.qyxxdzXQSQ},'%') and </if>
				<if test="map.qyxxdzXZ !=null"> QYXXDZ_X_Z LIKE CONCAT('%', #{map.qyxxdzXZ},'%') and </if>
				<if test="map.qyxxdzJCMph !=null"> QYXXDZ_J_C_MPH LIKE CONCAT('%', #{map.qyxxdzJCMph},'%') and </if>
				<if test="map.jd !=null"> JD LIKE CONCAT('%', #{map.jd},'%') and </if>
				<if test="map.wd !=null"> WD LIKE CONCAT('%', #{map.wd},'%') and </if>
				<if test="map.wsclffmc1 !=null"> WSCLFFMC1 LIKE CONCAT('%', #{map.wsclffmc1},'%') and </if>
				<if test="map.psqxlxmc !=null"> PSQXLXMC LIKE CONCAT('%', #{map.psqxlxmc},'%') and </if>
				<if test="map.snstmc !=null"> SNSTMC LIKE CONCAT('%', #{map.snstmc},'%') and </if>
				<if test="map.yxtsT !=null"> YXTS_T LIKE CONCAT('%', #{map.yxtsT},'%') and </if>
				<if test="map.wssjclnlDR !=null"> WSSJCLNL_D_R LIKE CONCAT('%', #{map.wssjclnlDR},'%') and </if>
				<if test="map.wssjcllWd !=null"> WSSJCLL_WD LIKE CONCAT('%', #{map.wssjcllWd},'%') and </if>
				<if test="map.qzClshwslWd !=null"> QZ_CLSHWSL_WD LIKE CONCAT('%', #{map.qzClshwslWd},'%') and </if>
				<if test="map.qzClgyfslWd !=null"> QZ_CLGYFSL_WD LIKE CONCAT('%', #{map.qzClgyfslWd},'%') and </if>
				<if test="map.hxxylqclD !=null"> HXXYLQCL_D LIKE CONCAT('%', #{map.hxxylqclD},'%') and </if>
				<if test="map.hxxyljkndHkS !=null"> HXXYLJKND_HK_S LIKE CONCAT('%', #{map.hxxyljkndHkS},'%') and </if>
				<if test="map.hxxylckndHkS !=null"> HXXYLCKND_HK_S LIKE CONCAT('%', #{map.hxxylckndHkS},'%') and </if>
				<if test="map.adqclD !=null"> ADQCL_D LIKE CONCAT('%', #{map.adqclD},'%') and </if>
				<if test="map.adjkndHkS !=null"> ADJKND_HK_S LIKE CONCAT('%', #{map.adjkndHkS},'%') and </if>
				<if test="map.adckndHkS !=null"> ADCKND_HK_S LIKE CONCAT('%', #{map.adckndHkS},'%') and </if>
				<if test="map.zdqclD !=null"> ZDQCL_D LIKE CONCAT('%', #{map.zdqclD},'%') and </if>
				<if test="map.zdjkndHkS !=null"> ZDJKND_HK_S LIKE CONCAT('%', #{map.zdjkndHkS},'%') and </if>
				<if test="map.zdckndHkS !=null"> ZDCKND_HK_S LIKE CONCAT('%', #{map.zdckndHkS},'%') and </if>
				<if test="map.zlqclQk !=null"> ZLQCL_QK LIKE CONCAT('%', #{map.zlqclQk},'%') and </if>
				<if test="map.zljkndHkS !=null"> ZLJKND_HK_S LIKE CONCAT('%', #{map.zljkndHkS},'%') and </if>
				<if test="map.zlckndHkS !=null"> ZLCKND_HK_S LIKE CONCAT('%', #{map.zlckndHkS},'%') and </if>



          <if test="map.wnqddqlD !=null"> YXTS_T LIKE CONCAT('%', #{map.wnqddqlD},'%') and </if>
          <if test="map.shxylqclD !=null"> WSSJCLNL_D_R LIKE CONCAT('%', #{map.shxylqclD},'%') and </if>
          <if test="map.shxyljkndHKS !=null"> WSSJCLL_WD LIKE CONCAT('%', #{map.shxyljkndHKS},'%') and </if>
          <if test="map.shxylckndHKS !=null"> QZ_CLSHWSL_WD LIKE CONCAT('%', #{map.shxylckndHKS},'%') and </if>
          <if test="map.xfwqclD !=null"> QZ_CLGYFSL_WD LIKE CONCAT('%', #{map.xfwqclD},'%') and </if>
          <if test="map.xfwjkndHKS !=null"> HXXYLQCL_D LIKE CONCAT('%', #{map.xfwjkndHKS},'%') and </if>
          <if test="map.xfwckndHKS !=null"> HXXYLJKND_HK_S LIKE CONCAT('%', #{map.xfwckndHKS},'%') and </if>
          <if test="map.dzwyqclD !=null"> HXXYLCKND_HK_S LIKE CONCAT('%', #{map.dzwyqclD},'%') and </if>
          <if test="map.dzwyjkndHKS !=null"> ADQCL_D LIKE CONCAT('%', #{map.dzwyjkndHKS},'%') and </if>
          <if test="map.dzwyckndHKS !=null"> ADJKND_HK_S LIKE CONCAT('%', #{map.dzwyckndHKS},'%') and </if>
          <if test="map.sylqclD !=null"> ADCKND_HK_S LIKE CONCAT('%', #{map.sylqclD},'%') and </if>
          <if test="map.syljkndHKS !=null"> ZDQCL_D LIKE CONCAT('%', #{map.syljkndHKS},'%') and </if>
          <if test="map.sylckndHKS !=null"> ZDJKND_HK_S LIKE CONCAT('%', #{map.sylckndHKS},'%') and </if>
          <if test="map.ylzhxjqclD !=null"> ZDCKND_HK_S LIKE CONCAT('%', #{map.ylzhxjqclD},'%') and </if>
          <if test="map.ylzhxjjkndHKS !=null"> ZLQCL_QK LIKE CONCAT('%', #{map.ylzhxjjkndHKS},'%') and </if>
          <if test="map.ylzhxjckndHKS !=null"> ZLJKND_HK_S LIKE CONCAT('%', #{map.ylzhxjckndHKS},'%') and </if>
		        is_del = 0 
		</trim>
		ORDER BY XZQHMC
		limit #{startPos},#{pageSize}
	</select>	
  
	<select id="selectForMap" resultMap="BaseResultMap">
		select
		*
		from poll_factory
		WHERE
		<trim>  
			<if test="map.tjnf !=null"> TJNF LIKE CONCAT('%', #{map.tjnf},'%') and </if>
			<if test="map.id !=null"> id LIKE CONCAT('%', #{map.id},'%') and </if>
			<if test="map.xzqhmc !=null"> XZQHMC LIKE CONCAT('%', #{map.xzqhmc},'%') and </if>
			<if test="map.zzjgdm !=null"> ZZJGDM LIKE CONCAT('%', #{map.zzjgdm},'%') and </if>
			<if test="map.dwmcGz !=null"> DWMC_GZ LIKE CONCAT('%', #{map.dwmcGz},'%') and </if>
			<if test="map.ssdm !=null"> SSDM LIKE CONCAT('%', #{map.ssdm},'%') and </if>
			<if test="map.sskzdy !=null"> SSKZDY LIKE CONCAT('%', #{map.sskzdy},'%') and </if>
			<if test="map.qyxxdzDqSZM !=null"> QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.qyxxdzDqSZM},'%') and </if>
			<if test="map.qyxxdzXQSQ !=null"> QYXXDZ_X_Q_S_Q LIKE CONCAT('%', #{map.qyxxdzXQSQ},'%') and </if>
			<if test="map.qyxxdzXZ !=null"> QYXXDZ_X_Z LIKE CONCAT('%', #{map.qyxxdzXZ},'%') and </if>
			<if test="map.qyxxdzJCMph !=null"> QYXXDZ_J_C_MPH LIKE CONCAT('%', #{map.qyxxdzJCMph},'%') and </if>
			<if test="map.jd !=null"> JD LIKE CONCAT('%', #{map.jd},'%') and </if>
			<if test="map.wd !=null"> WD LIKE CONCAT('%', #{map.wd},'%') and </if>
			<if test="map.wsclffmc1 !=null"> WSCLFFMC1 LIKE CONCAT('%', #{map.wsclffmc1},'%') and </if>
			<if test="map.psqxlxmc !=null"> PSQXLXMC LIKE CONCAT('%', #{map.psqxlxmc},'%') and </if>
			<if test="map.snstmc !=null"> SNSTMC LIKE CONCAT('%', #{map.snstmc},'%') and </if>
			<if test="map.yxtsT !=null"> YXTS_T LIKE CONCAT('%', #{map.yxtsT},'%') and </if>
			<if test="map.wssjclnlDR !=null"> WSSJCLNL_D_R LIKE CONCAT('%', #{map.wssjclnlDR},'%') and </if>
			<if test="map.wssjcllWd !=null"> WSSJCLL_WD LIKE CONCAT('%', #{map.wssjcllWd},'%') and </if>
			<if test="map.qzClshwslWd !=null"> QZ_CLSHWSL_WD LIKE CONCAT('%', #{map.qzClshwslWd},'%') and </if>
			<if test="map.qzClgyfslWd !=null"> QZ_CLGYFSL_WD LIKE CONCAT('%', #{map.qzClgyfslWd},'%') and </if>
			<if test="map.hxxylqclD !=null"> HXXYLQCL_D LIKE CONCAT('%', #{map.hxxylqclD},'%') and </if>
			<if test="map.hxxyljkndHkS !=null"> HXXYLJKND_HK_S LIKE CONCAT('%', #{map.hxxyljkndHkS},'%') and </if>
			<if test="map.hxxylckndHkS !=null"> HXXYLCKND_HK_S LIKE CONCAT('%', #{map.hxxylckndHkS},'%') and </if>
			<if test="map.adqclD !=null"> ADQCL_D LIKE CONCAT('%', #{map.adqclD},'%') and </if>
			<if test="map.adjkndHkS !=null"> ADJKND_HK_S LIKE CONCAT('%', #{map.adjkndHkS},'%') and </if>
			<if test="map.adckndHkS !=null"> ADCKND_HK_S LIKE CONCAT('%', #{map.adckndHkS},'%') and </if>
			<if test="map.zdqclD !=null"> ZDQCL_D LIKE CONCAT('%', #{map.zdqclD},'%') and </if>
			<if test="map.zdjkndHkS !=null"> ZDJKND_HK_S LIKE CONCAT('%', #{map.zdjkndHkS},'%') and </if>
			<if test="map.zdckndHkS !=null"> ZDCKND_HK_S LIKE CONCAT('%', #{map.zdckndHkS},'%') and </if>
			<if test="map.zlqclQk !=null"> ZLQCL_QK LIKE CONCAT('%', #{map.zlqclQk},'%') and </if>
			<if test="map.zljkndHkS !=null"> ZLJKND_HK_S LIKE CONCAT('%', #{map.zljkndHkS},'%') and </if>
			<if test="map.zlckndHkS !=null"> ZLCKND_HK_S LIKE CONCAT('%', #{map.zlckndHkS},'%') and </if>



          <if test="map.wnqddqlD !=null"> YXTS_T LIKE CONCAT('%', #{map.wnqddqlD},'%') and </if>
          <if test="map.shxylqclD !=null"> WSSJCLNL_D_R LIKE CONCAT('%', #{map.shxylqclD},'%') and </if>
          <if test="map.shxyljkndHKS !=null"> WSSJCLL_WD LIKE CONCAT('%', #{map.shxyljkndHKS},'%') and </if>
          <if test="map.shxylckndHKS !=null"> QZ_CLSHWSL_WD LIKE CONCAT('%', #{map.shxylckndHKS},'%') and </if>
          <if test="map.xfwqclD !=null"> QZ_CLGYFSL_WD LIKE CONCAT('%', #{map.xfwqclD},'%') and </if>
          <if test="map.xfwjkndHKS !=null"> HXXYLQCL_D LIKE CONCAT('%', #{map.xfwjkndHKS},'%') and </if>
          <if test="map.xfwckndHKS !=null"> HXXYLJKND_HK_S LIKE CONCAT('%', #{map.xfwckndHKS},'%') and </if>
          <if test="map.dzwyqclD !=null"> HXXYLCKND_HK_S LIKE CONCAT('%', #{map.dzwyqclD},'%') and </if>
          <if test="map.dzwyjkndHKS !=null"> ADQCL_D LIKE CONCAT('%', #{map.dzwyjkndHKS},'%') and </if>
          <if test="map.dzwyckndHKS !=null"> ADJKND_HK_S LIKE CONCAT('%', #{map.dzwyckndHKS},'%') and </if>
          <if test="map.sylqclD !=null"> ADCKND_HK_S LIKE CONCAT('%', #{map.sylqclD},'%') and </if>
          <if test="map.syljkndHKS !=null"> ZDQCL_D LIKE CONCAT('%', #{map.syljkndHKS},'%') and </if>
          <if test="map.sylckndHKS !=null"> ZDJKND_HK_S LIKE CONCAT('%', #{map.sylckndHKS},'%') and </if>
          <if test="map.ylzhxjqclD !=null"> ZDCKND_HK_S LIKE CONCAT('%', #{map.ylzhxjqclD},'%') and </if>
          <if test="map.ylzhxjjkndHKS !=null"> ZLQCL_QK LIKE CONCAT('%', #{map.ylzhxjjkndHKS},'%') and </if>
          <if test="map.ylzhxjckndHKS !=null"> ZLJKND_HK_S LIKE CONCAT('%', #{map.ylzhxjckndHKS},'%') and </if>
	        is_del = 0 
		</trim>
	</select>
    
    <select id="selectKzdySum" resultType="Map">
        select SSKZDY as KZDY,SUM(cast(HXXYLQCL_D as SIGNED INTEGER)) as HXXYLQCL_D,SUM(cast(ADQCL_D as SIGNED INTEGER)) as ADQCL_D
        from poll_factory
        where 
        <trim>  
	      <if test="map.xxdzdqSZM != null">
	        QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.xxdzdqSZM}, '%') and
	      </if>
	      <if test="map.xzqhmc != null">
	        XZQHMC LIKE CONCAT('%', #{map.xzqhmc}, '%') and
	      </if>
	      <if test="map.sy != null">
	        SNSTMC LIKE CONCAT('%', #{map.sy}, '%') and
	      </if>
	        is_del = 0 and SSKZDY != ''
		</trim> 
		group by KZDY
    </select>
    <select id="selectKzdmSum" resultType="Map">
        select SSDM as KZDM,SUM(cast(HXXYLQCL_D as SIGNED INTEGER)) as HXXYLQCL_D,SUM(cast(ADQCL_D as SIGNED INTEGER)) as ADQCL_D
        from poll_factory
        where 
        <trim>  
	      <if test="map.xxdzdqSZM != null">
	        QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.xxdzdqSZM}, '%') and
	      </if>
	      <if test="map.xzqhmc != null">
	        XZQHMC LIKE CONCAT('%', #{map.xzqhmc}, '%') and
	      </if>
	      <if test="map.sy != null">
	        SNSTMC LIKE CONCAT('%', #{map.sy}, '%') and
	      </if>
	        is_del = 0 and SSDM != ''
		</trim> 
		group by KZDM
    </select>
    <select id="selectKzdyTotal" resultType="Map">
        select SSKZDY as KZDY,SUM(cast(WSSJCLNL_D_R as SIGNED INTEGER)) as WSSJCLNL_D_R,SUM(cast(WSSJCLL_WD as SIGNED INTEGER)) as WSSJCLL_WD,SUM(cast(HXXYLQCL_D as SIGNED INTEGER)) as HXXYLQCL_D,SUM(cast(HXXYLJKND_HK_S as SIGNED INTEGER)) as HXXYLJKND_HK_S,SUM(cast(HXXYLCKND_HK_S as SIGNED INTEGER)) as HXXYLCKND_HK_S,
        SUM(cast(ADQCL_D as SIGNED INTEGER)) as ADQCL_D,SUM(cast(ADJKND_HK_S as SIGNED INTEGER)) as ADJKND_HK_S,SUM(cast(ADCKND_HK_S as SIGNED INTEGER)) as ADCKND_HK_S
        from poll_factory
        where 
        <trim>  
	      <if test="map.xxdzdqSZM != null">
	        QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.xxdzdqSZM}, '%') and
	      </if>
	      <if test="map.xzqhmc != null">
	        XZQHMC LIKE CONCAT('%', #{map.xzqhmc}, '%') and
	      </if>
	      <if test="map.sy != null">
	        SNSTMC LIKE CONCAT('%', #{map.sy}, '%') and
	      </if>
	      <if test="list != null and list.size()>0">
	         SSKZDY in
	         <foreach item="item" index="index" collection="list" open="(" separator="," close=")">  
                 #{item}  
             </foreach>
             and
	      </if>
	        is_del = 0 and SSKZDY != ''
		</trim> 
        group by SSKZDY limit #{startPos},#{pageSize}
    </select>
    <select id="getKzdyCount" resultType="java.lang.Integer">
        select count(*) from (select SSKZDY from poll_factory
        where 
        <trim>  
	      <if test="map.xxdzdqSZM != null">
	        QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.xxdzdqSZM}, '%') and
	      </if>
	      <if test="map.xzqhmc != null">
	        XZQHMC LIKE CONCAT('%', #{map.xzqhmc}, '%') and
	      </if>
	      <if test="map.sy != null">
	        SNSTMC LIKE CONCAT('%', #{map.sy}, '%') and
	      </if>
	      <if test="list != null and list.size()>0">
	         SSKZDY in
	         <foreach item="item" index="index" collection="list" open="(" separator="," close=")">  
                 #{item}  
             </foreach>
             and
	      </if>
	        is_del = 0 and SSKZDY != ''
		</trim> 
        group by SSKZDY) as total
    </select>
        <select id="selectKzdyTotalByName" resultType="Map">
        select SSKZDY as KZDY,SUM(cast(WSSJCLNL_D_R as SIGNED INTEGER)) as WSSJCLNL_D_R,SUM(cast(WSSJCLL_WD as SIGNED INTEGER)) as WSSJCLL_WD,SUM(cast(HXXYLQCL_D as SIGNED INTEGER)) as HXXYLQCL_D,SUM(cast(HXXYLJKND_HK_S as SIGNED INTEGER)) as HXXYLJKND_HK_S,SUM(cast(HXXYLCKND_HK_S as SIGNED INTEGER)) as HXXYLCKND_HK_S,
        SUM(cast(ADQCL_D as SIGNED INTEGER)) as ADQCL_D,SUM(cast(ADJKND_HK_S as SIGNED INTEGER)) as ADJKND_HK_S,SUM(cast(ADCKND_HK_S as SIGNED INTEGER)) as ADCKND_HK_S
        from poll_factory
        where 
        <trim>  
	      <if test="map.xxdzdqSZM != null">
	        QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.xxdzdqSZM}, '%') and
	      </if>
	      <if test="map.xzqhmc != null">
	        XZQHMC LIKE CONCAT('%', #{map.xzqhmc}, '%') and
	      </if>
	      <if test="name != null">
	        SSKZDY LIKE CONCAT('%', #{name}, '%') and
	      </if>
	        is_del = 0 and SSKZDY != ''
		</trim> 
        group by SSKZDY limit #{startPos},#{pageSize}
    </select>
    <select id="getKzdyCountByName" resultType="java.lang.Integer">
        select count(*) from (select SSKZDY from poll_factory 
        where
        <trim>  
	      <if test="map.xxdzdqSZM != null">
	        QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.xxdzdqSZM}, '%') and
	      </if>
	      <if test="map.xzqhmc != null">
	        XZQHMC LIKE CONCAT('%', #{map.xzqhmc}, '%') and
	      </if>
	      <if test="name != null">
	        SSKZDY LIKE CONCAT('%', #{name}, '%') and
	      </if>
	        is_del = 0 and SSKZDY != ''
		</trim>  
        group by SSKZDY) as total
    </select>
    <select id="computeKzdyTotal" resultType="java.lang.Integer">
        select 
        <trim prefix="COALESCE(SUM(cast(" suffix="as SIGNED INTEGER)),0)">
        ${map.prop}
        </trim>
        from poll_factory
        where
        <trim>
	      <if test="map.kzdy != null">
	        SSKZDY = #{map.kzdy} and
	      </if>
	        is_del = 0 and SSKZDY != ''
		</trim>  
    </select>
    <select id="selectKzdmTotal" resultType="Map">
        select SSDM as KZDM,SUM(cast(WSSJCLNL_D_R as SIGNED INTEGER)) as WSSJCLNL_D_R,SUM(cast(WSSJCLL_WD as SIGNED INTEGER)) as WSSJCLL_WD,SUM(cast(HXXYLQCL_D as SIGNED INTEGER)) as HXXYLQCL_D,SUM(cast(HXXYLJKND_HK_S as SIGNED INTEGER)) as HXXYLJKND_HK_S,SUM(cast(HXXYLCKND_HK_S as SIGNED INTEGER)) as HXXYLCKND_HK_S,
        SUM(cast(ADQCL_D as SIGNED INTEGER)) as ADQCL_D,SUM(cast(ADJKND_HK_S as SIGNED INTEGER)) as ADJKND_HK_S,SUM(cast(ADCKND_HK_S as SIGNED INTEGER)) as ADCKND_HK_S
        from poll_factory 
        where 
        <trim>  
	      <if test="map.xxdzdqSZM != null">
	        QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.xxdzdqSZM}, '%') and
	      </if>
	      <if test="map.xzqhmc != null">
	        XZQHMC LIKE CONCAT('%', #{map.xzqhmc}, '%') and
	      </if>
	      <if test="map.sy != null">
	        SNSTMC LIKE CONCAT('%', #{map.sy}, '%') and
	      </if>
	      <if test="list != null and list.size()>0">
	         SSDM in
	         <foreach item="item" index="index" collection="list" open="(" separator="," close=")">  
                 #{item}  
             </foreach>
             and
	      </if>
	        is_del = 0 and SSDM != ''
		</trim> 
        group by SSDM limit #{startPos},#{pageSize}
    </select>
    <select id="getKzdmCount" resultType="java.lang.Integer">
        select count(*) from (select SSDM from poll_factory 
        where 
        <trim>  
	      <if test="map.xxdzdqSZM != null">
	        QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.xxdzdqSZM}, '%') and
	      </if>
	      <if test="map.xzqhmc != null">
	        XZQHMC LIKE CONCAT('%', #{map.xzqhmc}, '%') and
	      </if>
	      <if test="map.sy != null">
	        SNSTMC LIKE CONCAT('%', #{map.sy}, '%') and
	      </if>
	      <if test="list != null and list.size()>0">
	         SSDM in
	         <foreach item="item" index="index" collection="list" open="(" separator="," close=")">  
                 #{item}  
             </foreach>
             and
	      </if>
	        is_del = 0 and SSDM != ''
		</trim> 
        group by SSDM) as total
    </select>
        <select id="selectKzdmTotalByName" resultType="Map">
        select SSDM as KZDM,SUM(cast(WSSJCLNL_D_R as SIGNED INTEGER)) as WSSJCLNL_D_R,SUM(cast(WSSJCLL_WD as SIGNED INTEGER)) as WSSJCLL_WD,SUM(cast(HXXYLQCL_D as SIGNED INTEGER)) as HXXYLQCL_D,SUM(cast(HXXYLJKND_HK_S as SIGNED INTEGER)) as HXXYLJKND_HK_S,SUM(cast(HXXYLCKND_HK_S as SIGNED INTEGER)) as HXXYLCKND_HK_S,
        SUM(cast(ADQCL_D as SIGNED INTEGER)) as ADQCL_D,SUM(cast(ADJKND_HK_S as SIGNED INTEGER)) as ADJKND_HK_S,SUM(cast(ADCKND_HK_S as SIGNED INTEGER)) as ADCKND_HK_S
        from poll_factory 
        where 
        <trim>  
	      <if test="map.xxdzdqSZM != null">
	        QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.xxdzdqSZM}, '%') and
	      </if>
	      <if test="map.xzqhmc != null">
	        XZQHMC LIKE CONCAT('%', #{map.xzqhmc}, '%') and
	      </if>
	      <if test="name != null">
	        SSDM LIKE CONCAT('%', #{name}, '%') and
	      </if>
	        is_del = 0 and SSDM != ''
		</trim> 
        group by SSDM limit #{startPos},#{pageSize}
    </select>
    <select id="getKzdmCountByName" resultType="java.lang.Integer">
        select count(*) from (select SSDM from poll_factory 
        where
        <trim>  
	      <if test="map.xxdzdqSZM != null">
	        QYXXDZ_DQ_S_Z_M LIKE CONCAT('%', #{map.xxdzdqSZM}, '%') and
	      </if>
	      <if test="map.xzqhmc != null">
	        XZQHMC LIKE CONCAT('%', #{map.xzqhmc}, '%') and
	      </if>
	      <if test="name != null">
	        SSDM LIKE CONCAT('%', #{name}, '%') and
	      </if>
	        is_del = 0 and SSDM != ''
		</trim>  
        group by SSDM) as total
    </select>
    <select id="computeKzdmTotal" resultType="java.lang.Integer">
        select 
        <trim prefix="COALESCE(SUM(cast(" suffix="as SIGNED INTEGER)),0)">
        ${map.prop}
        </trim>
        from poll_factory
        where
        <trim>
	      <if test="map.kzdm != null">
	        SSDM = #{map.kzdm} and
	      </if>
	        is_del = 0 and SSDM != ''
		</trim>  
    </select>
    <select id="selectWater" resultType="Map">
        select distinct SNSTMC as SZLYMC
        from poll_factory
        where
	    is_del = 0 and SNSTMC != ''
    </select>


    <select id="getWsc"   parameterType="java.util.Map" resultType="Map">
        select *
        from pollution
        where
        <trim>
            <if test="map.SNSTMC!= null">
                SNSTMC = #{map.SNSTMC} and
            </if>
            <if test="map.SNSTDM != null">
                SNSTDM = #{map.SNSTDM} and
            </if>
            <if test="map.TJNF != null">
                TJNF = #{map.TJNF} and
            </if>
        </trim>
        is_del = 0
    </select>
  
  
</mapper>